<?xml version="1.0" encoding="UTF-8"?>
<office:document-content xmlns:office="urn:oasis:names:tc:opendocument:xmlns:office:1.0" xmlns:style="urn:oasis:names:tc:opendocument:xmlns:style:1.0" xmlns:text="urn:oasis:names:tc:opendocument:xmlns:text:1.0" xmlns:table="urn:oasis:names:tc:opendocument:xmlns:table:1.0" xmlns:draw="urn:oasis:names:tc:opendocument:xmlns:drawing:1.0" xmlns:fo="urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:meta="urn:oasis:names:tc:opendocument:xmlns:meta:1.0" xmlns:number="urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0" xmlns:svg="urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0" xmlns:chart="urn:oasis:names:tc:opendocument:xmlns:chart:1.0" xmlns:dr3d="urn:oasis:names:tc:opendocument:xmlns:dr3d:1.0" xmlns:math="http://www.w3.org/1998/Math/MathML" xmlns:form="urn:oasis:names:tc:opendocument:xmlns:form:1.0" xmlns:script="urn:oasis:names:tc:opendocument:xmlns:script:1.0" xmlns:ooo="http://openoffice.org/2004/office" xmlns:ooow="http://openoffice.org/2004/writer" xmlns:oooc="http://openoffice.org/2004/calc" xmlns:dom="http://www.w3.org/2001/xml-events" xmlns:xforms="http://www.w3.org/2002/xforms" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rpt="http://openoffice.org/2005/report" xmlns:of="urn:oasis:names:tc:opendocument:xmlns:of:1.2" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:grddl="http://www.w3.org/2003/g/data-view#" xmlns:officeooo="http://openoffice.org/2009/office" xmlns:tableooo="http://openoffice.org/2009/table" xmlns:drawooo="http://openoffice.org/2010/draw" xmlns:calcext="urn:org:documentfoundation:names:experimental:calc:xmlns:calcext:1.0" xmlns:loext="urn:org:documentfoundation:names:experimental:office:xmlns:loext:1.0" xmlns:field="urn:openoffice:names:experimental:ooo-ms-interop:xmlns:field:1.0" xmlns:formx="urn:openoffice:names:experimental:ooxml-odf-interop:xmlns:form:1.0" xmlns:css3t="http://www.w3.org/TR/css3-text/" office:version="1.2"><office:scripts/><office:font-face-decls><style:font-face style:name="StarSymbol" svg:font-family="StarSymbol" style:font-charset="x-symbol"/><style:font-face style:name="Marlett" svg:font-family="Marlett" style:font-pitch="variable" style:font-charset="x-symbol"/><style:font-face style:name="Wingdings" svg:font-family="Wingdings" style:font-pitch="variable" style:font-charset="x-symbol"/><style:font-face style:name="Symbol" svg:font-family="Symbol" style:font-family-generic="roman" style:font-pitch="variable" style:font-charset="x-symbol"/><style:font-face style:name="Courier New" svg:font-family="&apos;Courier New&apos;" style:font-family-generic="modern"/><style:font-face style:name="Courier" svg:font-family="Courier, &apos;Courier New&apos;" style:font-family-generic="modern"/><style:font-face style:name="Courier 10 Pitch" svg:font-family="&apos;Courier 10 Pitch&apos;" style:font-adornments="Regular" style:font-pitch="fixed"/><style:font-face style:name="FreeMono4" svg:font-family="FreeMono" style:font-family-generic="modern" style:font-pitch="fixed"/><style:font-face style:name="FreeMono" svg:font-family="FreeMono" style:font-adornments="Negreta" style:font-family-generic="modern" style:font-pitch="fixed"/><style:font-face style:name="FreeMono1" svg:font-family="FreeMono" style:font-adornments="Negreta cursiva" style:font-family-generic="modern" style:font-pitch="fixed"/><style:font-face style:name="FreeMono2" svg:font-family="FreeMono" style:font-adornments="Normal" style:font-family-generic="modern" style:font-pitch="fixed"/><style:font-face style:name="Nimbus Mono L" svg:font-family="&apos;Nimbus Mono L&apos;" style:font-family-generic="modern" style:font-pitch="fixed"/><style:font-face style:name="DejaVu Sans Mono1" svg:font-family="&apos;DejaVu Sans Mono&apos;" style:font-family-generic="swiss" style:font-pitch="fixed"/><style:font-face style:name="DejaVu Sans Mono" svg:font-family="&apos;DejaVu Sans Mono&apos;" style:font-adornments="Bold" style:font-family-generic="swiss" style:font-pitch="fixed"/><style:font-face style:name="Arial Unicode MS" svg:font-family="&apos;Arial Unicode MS&apos;" style:font-pitch="variable"/><style:font-face style:name="Bitstream Vera Serif" svg:font-family="&apos;Bitstream Vera Serif&apos;" style:font-adornments="Bold" style:font-pitch="variable"/><style:font-face style:name="Eaglefeather" svg:font-family="Eaglefeather" style:font-pitch="variable"/><style:font-face style:name="FreeMono3" svg:font-family="FreeMono" style:font-adornments="Regular" style:font-pitch="variable"/><style:font-face style:name="HG Mincho Light J" svg:font-family="&apos;HG Mincho Light J&apos;" style:font-pitch="variable"/><style:font-face style:name="Luxi Sans1" svg:font-family="&apos;Luxi Sans&apos;" style:font-adornments="Bold" style:font-pitch="variable"/><style:font-face style:name="FreeMono5" svg:font-family="FreeMono" style:font-family-generic="modern" style:font-pitch="variable"/><style:font-face style:name="Nimbus Roman No9 L1" svg:font-family="&apos;Nimbus Roman No9 L&apos;" style:font-family-generic="modern" style:font-pitch="variable"/><style:font-face style:name="FreeSerif" svg:font-family="FreeSerif" style:font-adornments="Mittel" style:font-family-generic="roman" style:font-pitch="variable"/><style:font-face style:name="Nimbus Roman No9 L" svg:font-family="&apos;Nimbus Roman No9 L&apos;" style:font-family-generic="roman" style:font-pitch="variable"/><style:font-face style:name="Times1" svg:font-family="Times" style:font-adornments="Bold" style:font-family-generic="roman" style:font-pitch="variable"/><style:font-face style:name="Times2" svg:font-family="Times" style:font-adornments="Bold Italic" style:font-family-generic="roman" style:font-pitch="variable"/><style:font-face style:name="Times4" svg:font-family="Times" style:font-adornments="Italic" style:font-family-generic="roman" style:font-pitch="variable"/><style:font-face style:name="Times3" svg:font-family="Times" style:font-adornments="Regular" style:font-family-generic="roman" style:font-pitch="variable"/><style:font-face style:name="Times" svg:font-family="Times" style:font-adornments="Roman" style:font-family-generic="roman" style:font-pitch="variable"/><style:font-face style:name="Times New Roman" svg:font-family="&apos;Times New Roman&apos;" style:font-family-generic="roman" style:font-pitch="variable"/><style:font-face style:name="Comic Sans MS" svg:font-family="&apos;Comic Sans MS&apos;" style:font-family-generic="script" style:font-pitch="variable"/><style:font-face style:name="Arial" svg:font-family="Arial" style:font-family-generic="swiss" style:font-pitch="variable"/><style:font-face style:name="Arial1" svg:font-family="Arial" style:font-adornments="Bold" style:font-family-generic="swiss" style:font-pitch="variable"/><style:font-face style:name="DejaVu Sans" svg:font-family="&apos;DejaVu Sans&apos;" style:font-adornments="ExtraLight" style:font-family-generic="swiss" style:font-pitch="variable"/><style:font-face style:name="FreeSans1" svg:font-family="FreeSans" style:font-adornments="Bold" style:font-family-generic="swiss" style:font-pitch="variable"/><style:font-face style:name="FreeSans2" svg:font-family="FreeSans" style:font-adornments="BoldOblique" style:font-family-generic="swiss" style:font-pitch="variable"/><style:font-face style:name="FreeSans3" svg:font-family="FreeSans" style:font-adornments="Oblique" style:font-family-generic="swiss" style:font-pitch="variable"/><style:font-face style:name="FreeSans" svg:font-family="FreeSans" style:font-adornments="Regular" style:font-family-generic="swiss" style:font-pitch="variable"/><style:font-face style:name="Luxi Sans" svg:font-family="&apos;Luxi Sans&apos;" style:font-family-generic="swiss" style:font-pitch="variable"/><style:font-face style:name="Tahoma" svg:font-family="Tahoma" style:font-family-generic="swiss" style:font-pitch="variable"/></office:font-face-decls><office:automatic-styles><style:style style:name="Table4" style:family="table"><style:table-properties style:width="6in" table:align="margins"/></style:style><style:style style:name="Table4.A" style:family="table-column"><style:table-column-properties style:column-width="3in" style:rel-column-width="32767*"/></style:style><style:style style:name="Table4.B" style:family="table-column"><style:table-column-properties style:column-width="3in" style:rel-column-width="32768*"/></style:style><style:style style:name="Table4.A1" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border="none"/></style:style><style:style style:name="Table7" style:family="table"><style:table-properties style:width="4.7861in" fo:margin-left="1.2208in" fo:margin-right="-0.0069in" table:align="margins"/></style:style><style:style style:name="Table7.A" style:family="table-column"><style:table-column-properties style:column-width="0.7861in" style:rel-column-width="10764*"/></style:style><style:style style:name="Table7.B" style:family="table-column"><style:table-column-properties style:column-width="1.9951in" style:rel-column-width="27318*"/></style:style><style:style style:name="Table7.C" style:family="table-column"><style:table-column-properties style:column-width="2.0049in" style:rel-column-width="27453*"/></style:style><style:style style:name="Table7.A1" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border="0.05pt solid #000000"/></style:style><style:style style:name="Table7.A2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6e6" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table7.B2" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table7.C2" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table7.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table7.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table7.C3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table7.A4" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table7.B4" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table7.C4" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1" style:family="table"><style:table-properties style:width="6.0042in" fo:margin-left="0in" fo:margin-right="-0.0042in" fo:break-before="page" table:align="margins"/></style:style><style:style style:name="Table1.A" style:family="table-column"><style:table-column-properties style:column-width="1.2972in" style:rel-column-width="14159*"/></style:style><style:style style:name="Table1.B" style:family="table-column"><style:table-column-properties style:column-width="4.7069in" style:rel-column-width="51376*"/></style:style><style:style style:name="Table1.A1" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.A2" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table6" style:family="table"><style:table-properties style:width="6.1958in" fo:margin-left="0in" fo:margin-right="-0.1958in" table:align="margins"/></style:style><style:style style:name="Table6.A" style:family="table-column"><style:table-column-properties style:column-width="1.5458in" style:rel-column-width="16350*"/></style:style><style:style style:name="Table6.B" style:family="table-column"><style:table-column-properties style:column-width="4.65in" style:rel-column-width="49185*"/></style:style><style:style style:name="Table6.A1" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border="0.05pt solid #000000"/></style:style><style:style style:name="Table6.A2" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table6.B2" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table6.A7" style:family="table-cell"><style:table-cell-properties fo:padding="0.0097in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table6.B7" style:family="table-cell"><style:table-cell-properties fo:padding="0.0097in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table5" style:family="table"><style:table-properties style:width="6.0042in" fo:margin-left="0in" fo:margin-right="-0.0042in" table:align="margins"/></style:style><style:style style:name="Table5.A" style:family="table-column"><style:table-column-properties style:column-width="1.7493in" style:rel-column-width="19093*"/></style:style><style:style style:name="Table5.B" style:family="table-column"><style:table-column-properties style:column-width="4.2549in" style:rel-column-width="46442*"/></style:style><style:style style:name="Table5.A1" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border="0.05pt solid #000000"/></style:style><style:style style:name="Table5.A2" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table5.B2" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="P1" style:family="paragraph" style:parent-style-name="HF-Copyright"><style:text-properties officeooo:paragraph-rsid="0019808d"/></style:style><style:style style:name="P2" style:family="paragraph" style:parent-style-name="HF-Copyright"><style:text-properties style:font-name="Luxi Sans1" officeooo:paragraph-rsid="0019808d" style:font-name-asian="Times New Roman"/></style:style><style:style style:name="P3" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:font-style="italic" fo:font-weight="bold" style:font-style-asian="italic" style:font-weight-asian="bold" style:font-style-complex="italic" style:font-weight-complex="bold"/></style:style><style:style style:name="P4" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:font-size="8pt" style:font-size-asian="8pt" style:font-size-complex="8pt"/></style:style><style:style style:name="P5" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:font-style="normal" style:font-style-asian="normal" style:font-style-complex="normal"/></style:style><style:style style:name="P6" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:font-style="normal" fo:font-weight="normal" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-style-complex="normal" style:font-weight-complex="normal"/></style:style><style:style style:name="P7" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties style:font-name="DejaVu Sans Mono1" fo:font-size="18pt" style:font-size-asian="18pt" style:font-size-complex="18pt"/></style:style><style:style style:name="P8" style:family="paragraph" style:parent-style-name="MT-Topic"><style:paragraph-properties fo:break-before="page"/></style:style><style:style style:name="P9" style:family="paragraph" style:parent-style-name="EX-Heading"><style:paragraph-properties fo:break-before="page"/></style:style><style:style style:name="P10" style:family="paragraph" style:parent-style-name="LAB-Heading"><style:paragraph-properties fo:break-before="page"/></style:style><style:style style:name="P11" style:family="paragraph" style:parent-style-name="Standard"><style:paragraph-properties fo:break-before="page"/></style:style><style:style style:name="P12" style:family="paragraph" style:parent-style-name="CC-lwall_20_sig"><style:paragraph-properties fo:break-before="page"/></style:style><style:style style:name="P13" style:family="paragraph" style:parent-style-name="EX-Output"><style:text-properties fo:font-weight="bold" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P14" style:family="paragraph" style:parent-style-name="EX-Output"><style:text-properties officeooo:rsid="0013cccf" officeooo:paragraph-rsid="0013cccf"/></style:style><style:style style:name="P15" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties fo:font-weight="normal" style:font-weight-asian="normal" style:font-weight-complex="normal"/></style:style><style:style style:name="P16" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties fo:font-weight="normal" officeooo:rsid="000f9486" officeooo:paragraph-rsid="000f9486" style:font-weight-asian="normal" style:font-weight-complex="normal"/></style:style><style:style style:name="P17" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties fo:font-style="italic" style:font-style-asian="italic" style:font-style-complex="italic"/></style:style><style:style style:name="P18" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-weight="bold" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P19" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/></style:style><style:style style:name="P20" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="0007f16a" officeooo:paragraph-rsid="0007f16a"/></style:style><style:style style:name="P21" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="000f9486" officeooo:paragraph-rsid="000f9486"/></style:style><style:style style:name="P22" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:padding="0.0201in" fo:border="0.51pt solid #000000" style:shadow="none"/><style:text-properties fo:font-size="8pt" fo:font-style="italic" style:font-size-asian="8pt" style:font-style-asian="italic" style:font-size-complex="8pt" style:font-style-complex="italic"/></style:style><style:style style:name="P23" style:family="paragraph" style:parent-style-name="Preformatted_20_Text"><style:text-properties fo:font-size="14pt" fo:font-weight="bold" style:font-size-asian="14pt" style:font-weight-asian="bold" style:font-size-complex="14pt" style:font-weight-complex="bold"/></style:style><style:style style:name="P24" style:family="paragraph" style:parent-style-name="TA-Title"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/></style:style><style:style style:name="P25" style:family="paragraph" style:parent-style-name="Preformatted_20_Text"><style:paragraph-properties text:number-lines="false" text:line-number="0"/><style:text-properties fo:font-size="14pt" fo:font-weight="bold" style:font-size-asian="14pt" style:font-weight-asian="bold" style:font-size-complex="14pt" style:font-weight-complex="bold"/></style:style><style:style style:name="P26" style:family="paragraph" style:parent-style-name="LAB-Text"><style:text-properties fo:font-weight="bold" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P27" style:family="paragraph" style:parent-style-name="LAB-Ex_20_number"><style:text-properties fo:font-weight="bold"/></style:style><style:style style:name="P28" style:family="paragraph" style:parent-style-name="EX-Code"><style:text-properties officeooo:rsid="000bb20a" officeooo:paragraph-rsid="000bb20a"/></style:style><style:style style:name="P29" style:family="paragraph" style:parent-style-name="EX-Code"><style:text-properties officeooo:rsid="0013cccf" officeooo:paragraph-rsid="0013cccf"/></style:style><style:style style:name="P30" style:family="paragraph" style:parent-style-name="Standard" style:list-style-name="WW8Num1"/><style:style style:name="P31" style:family="paragraph" style:parent-style-name="MT-Major_20_Point_20_Text"><style:text-properties fo:font-style="normal" style:font-style-asian="normal" style:font-style-complex="normal"/></style:style><style:style style:name="P32" style:family="paragraph" style:parent-style-name="MT-Major_20_Point_20_Text" style:list-style-name=""/><style:style style:name="P33" style:family="paragraph" style:parent-style-name="MT-Major_20_Point_20_Text" style:list-style-name=""><style:text-properties fo:font-style="italic" style:font-style-asian="italic" style:font-style-complex="italic"/></style:style><style:style style:name="P34" style:family="paragraph" style:parent-style-name="MT-Major_20_Point_20_Text"><style:text-properties fo:font-weight="normal" style:font-weight-asian="normal" style:font-weight-complex="normal"/></style:style><style:style style:name="P35" style:family="paragraph" style:parent-style-name="MT-Major_20_Point_20_Text"><style:paragraph-properties fo:margin-left="0in" fo:margin-right="0in" fo:text-indent="0in" style:auto-text-indent="false"/><style:text-properties fo:font-size="14pt" style:font-size-asian="14pt" style:font-size-complex="14pt"/></style:style><style:style style:name="P36" style:family="paragraph" style:parent-style-name="MT-Major_20_Point_20_Text"><style:paragraph-properties fo:margin-left="0in" fo:margin-right="0in" fo:text-indent="0in" style:auto-text-indent="false"/><style:text-properties fo:font-size="12pt" style:font-size-asian="12pt" style:font-size-complex="12pt"/></style:style><style:style style:name="P37" style:family="paragraph" style:parent-style-name="CC-Course_20_name" style:master-page-name="Convert_20_1"><style:paragraph-properties style:page-number="1"/></style:style><style:style style:name="P38" style:family="paragraph" style:parent-style-name="MT-Major_20_Point_20_NO_20_BULLET" style:list-style-name=""/><style:style style:name="P39" style:family="paragraph" style:parent-style-name="MT-Section" style:list-style-name="WW8Num1"/><style:style style:name="P40" style:family="paragraph" style:parent-style-name="Text_20_body" style:list-style-name="WW8Num1"/><style:style style:name="P41" style:family="paragraph" style:parent-style-name="MT-Topic" style:list-style-name="WW8Num1" style:master-page-name="Convert_20_2"><style:paragraph-properties style:page-number="1"/><style:text-properties officeooo:paragraph-rsid="000bb20a"/></style:style><style:style style:name="P42" style:family="paragraph" style:parent-style-name="MT-Topic" style:list-style-name="WW8Num1"><style:paragraph-properties fo:break-before="page"/></style:style><style:style style:name="P43" style:family="paragraph" style:parent-style-name="LAB-Text" style:list-style-name="L5"/><style:style style:name="P44" style:family="paragraph" style:parent-style-name="LAB-Text" style:list-style-name="L5"><style:text-properties officeooo:paragraph-rsid="0014552a"/></style:style><style:style style:name="P45" style:family="paragraph"><style:paragraph-properties fo:text-align="center"/></style:style><style:style style:name="P46" style:family="paragraph"><loext:graphic-properties draw:fill="none" draw:fill-color="#ffffff"/></style:style><style:style style:name="P47" style:family="paragraph"><loext:graphic-properties draw:fill="none" draw:fill-color="#ffffff"/><style:text-properties style:font-name="FreeMono5"/></style:style><style:style style:name="T1" style:family="text"><style:text-properties officeooo:rsid="0019808d"/></style:style><style:style style:name="T2" style:family="text"><style:text-properties style:font-name="Luxi Sans1" style:font-name-asian="Times New Roman"/></style:style><style:style style:name="T3" style:family="text"><style:text-properties officeooo:rsid="001888f7"/></style:style><style:style style:name="T4" style:family="text"><style:text-properties fo:font-weight="bold"/></style:style><style:style style:name="T5" style:family="text"><style:text-properties fo:font-weight="bold" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T6" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="00162aa2" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T7" style:family="text"><style:text-properties fo:font-style="italic" style:font-style-asian="italic" style:font-style-complex="italic"/></style:style><style:style style:name="T8" style:family="text"><style:text-properties fo:font-style="italic" fo:font-weight="bold" style:font-style-asian="italic" style:font-weight-asian="bold" style:font-style-complex="italic" style:font-weight-complex="bold"/></style:style><style:style style:name="T9" style:family="text"><style:text-properties fo:font-style="italic" style:text-underline-style="none" style:font-style-asian="italic" style:font-style-complex="italic"/></style:style><style:style style:name="T10" style:family="text"><style:text-properties fo:font-style="italic" fo:font-weight="normal" style:font-style-asian="italic" style:font-weight-asian="normal" style:font-style-complex="italic" style:font-weight-complex="normal"/></style:style><style:style style:name="T11" style:family="text"><style:text-properties fo:font-style="normal" style:font-style-asian="normal" style:font-style-complex="normal"/></style:style><style:style style:name="T12" style:family="text"><style:text-properties fo:font-style="normal" fo:font-weight="bold" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-style-complex="normal" style:font-weight-complex="bold"/></style:style><style:style style:name="T13" style:family="text"><style:text-properties fo:font-style="normal" fo:font-weight="normal" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-style-complex="normal" style:font-weight-complex="normal"/></style:style><style:style style:name="T14" style:family="text"><style:text-properties style:font-name="Courier 10 Pitch" fo:font-style="italic" fo:font-weight="normal" style:font-style-asian="italic" style:font-weight-asian="normal" style:font-style-complex="italic" style:font-weight-complex="normal"/></style:style><style:style style:name="T15" style:family="text"><style:text-properties fo:font-weight="normal" style:font-weight-asian="normal" style:font-weight-complex="normal"/></style:style><style:style style:name="T16" style:family="text"><style:text-properties style:font-name="FreeMono5"/></style:style><style:style style:name="T17" style:family="text"><style:text-properties style:font-name="FreeMono4"/></style:style><style:style style:name="T18" style:family="text"><style:text-properties officeooo:rsid="00055914"/></style:style><style:style style:name="T19" style:family="text"><style:text-properties officeooo:rsid="0007f16a"/></style:style><style:style style:name="T20" style:family="text"><style:text-properties officeooo:rsid="000a7411"/></style:style><style:style style:name="T21" style:family="text"><style:text-properties officeooo:rsid="000bb20a"/></style:style><style:style style:name="T22" style:family="text"><style:text-properties officeooo:rsid="00119e8d"/></style:style><style:style style:name="T23" style:family="text"><style:text-properties officeooo:rsid="0014552a"/></style:style><style:style style:name="T24" style:family="text"><style:text-properties officeooo:rsid="00162aa2"/></style:style><style:style style:name="T25" style:family="text"><style:text-properties officeooo:rsid="00181e7c"/></style:style><style:style style:name="T26" style:family="text"><style:text-properties officeooo:rsid="001ad9dc"/></style:style><text:list-style style:name="L1"><text:list-level-style-number text:level="1" style:num-format="A"><style:list-level-properties/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="2" style:num-format="A"><style:list-level-properties text:space-before="0.315in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="3" style:num-format="A"><style:list-level-properties text:space-before="0.6299in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="4" style:num-format="A"><style:list-level-properties text:space-before="0.9449in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="5" style:num-format="A"><style:list-level-properties text:space-before="1.2598in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="6" style:num-format="A"><style:list-level-properties text:space-before="1.5748in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="7" style:num-format="A"><style:list-level-properties text:space-before="1.8898in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="8" style:num-format="A"><style:list-level-properties text:space-before="2.2047in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="9" style:num-format="A"><style:list-level-properties text:space-before="2.5197in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="10" style:num-format="A"><style:list-level-properties text:space-before="2.8346in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number></text:list-style><text:list-style style:name="L2"><text:list-level-style-number text:level="1" style:num-format="A"><style:list-level-properties/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="2" style:num-format="A"><style:list-level-properties text:space-before="0.315in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="3" style:num-format="A"><style:list-level-properties text:space-before="0.6299in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="4" style:num-format="A"><style:list-level-properties text:space-before="0.9449in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="5" style:num-format="A"><style:list-level-properties text:space-before="1.2598in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="6" style:num-format="A"><style:list-level-properties text:space-before="1.5748in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="7" style:num-format="A"><style:list-level-properties text:space-before="1.8898in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="8" style:num-format="A"><style:list-level-properties text:space-before="2.2047in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="9" style:num-format="A"><style:list-level-properties text:space-before="2.5197in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="10" style:num-format="A"><style:list-level-properties text:space-before="2.8346in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number></text:list-style><text:list-style style:name="L3"><text:list-level-style-number text:level="1" style:num-format="A"><style:list-level-properties/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="2" style:num-format="A"><style:list-level-properties text:space-before="0.315in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="3" style:num-format="A"><style:list-level-properties text:space-before="0.6299in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="4" style:num-format="A"><style:list-level-properties text:space-before="0.9449in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="5" style:num-format="A"><style:list-level-properties text:space-before="1.2598in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="6" style:num-format="A"><style:list-level-properties text:space-before="1.5748in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="7" style:num-format="A"><style:list-level-properties text:space-before="1.8898in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="8" style:num-format="A"><style:list-level-properties text:space-before="2.2047in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="9" style:num-format="A"><style:list-level-properties text:space-before="2.5197in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="10" style:num-format="A"><style:list-level-properties text:space-before="2.8346in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number></text:list-style><text:list-style style:name="L4"><text:list-level-style-number text:level="1" style:num-format="A"><style:list-level-properties/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="2" style:num-format="A"><style:list-level-properties text:space-before="0.315in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="3" style:num-format="A"><style:list-level-properties text:space-before="0.6299in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="4" style:num-format="A"><style:list-level-properties text:space-before="0.9449in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="5" style:num-format="A"><style:list-level-properties text:space-before="1.2598in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="6" style:num-format="A"><style:list-level-properties text:space-before="1.5748in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="7" style:num-format="A"><style:list-level-properties text:space-before="1.8898in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="8" style:num-format="A"><style:list-level-properties text:space-before="2.2047in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="9" style:num-format="A"><style:list-level-properties text:space-before="2.5197in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number><text:list-level-style-number text:level="10" style:num-format="A"><style:list-level-properties text:space-before="2.8346in"/><style:text-properties fo:color="#000000" fo:font-size="100%"/></text:list-level-style-number></text:list-style><text:list-style style:name="L5"><text:list-level-style-number text:level="1" text:style-name="Numbering_20_Symbols" style:num-suffix="." style:num-format="1"><style:list-level-properties text:list-level-position-and-space-mode="label-alignment"><style:list-level-label-alignment text:label-followed-by="listtab" text:list-tab-stop-position="0.5in" fo:text-indent="-0.25in" fo:margin-left="0.5in"/></style:list-level-properties></text:list-level-style-number><text:list-level-style-number text:level="2" style:num-suffix="." style:num-format="1"><style:list-level-properties text:list-level-position-and-space-mode="label-alignment"><style:list-level-label-alignment text:label-followed-by="listtab" text:list-tab-stop-position="0.75in" fo:text-indent="-0.25in" fo:margin-left="0.75in"/></style:list-level-properties></text:list-level-style-number><text:list-level-style-number text:level="3" style:num-suffix="." style:num-format="1"><style:list-level-properties text:list-level-position-and-space-mode="label-alignment"><style:list-level-label-alignment text:label-followed-by="listtab" text:list-tab-stop-position="1in" fo:text-indent="-0.25in" fo:margin-left="1in"/></style:list-level-properties></text:list-level-style-number><text:list-level-style-number text:level="4" style:num-suffix="." style:num-format="1"><style:list-level-properties text:list-level-position-and-space-mode="label-alignment"><style:list-level-label-alignment text:label-followed-by="listtab" text:list-tab-stop-position="1.25in" fo:text-indent="-0.25in" fo:margin-left="1.25in"/></style:list-level-properties></text:list-level-style-number><text:list-level-style-number text:level="5" style:num-suffix="." style:num-format="1"><style:list-level-properties text:list-level-position-and-space-mode="label-alignment"><style:list-level-label-alignment text:label-followed-by="listtab" text:list-tab-stop-position="1.5in" fo:text-indent="-0.25in" fo:margin-left="1.5in"/></style:list-level-properties></text:list-level-style-number><text:list-level-style-number text:level="6" style:num-suffix="." style:num-format="1"><style:list-level-properties text:list-level-position-and-space-mode="label-alignment"><style:list-level-label-alignment text:label-followed-by="listtab" text:list-tab-stop-position="1.75in" fo:text-indent="-0.25in" fo:margin-left="1.75in"/></style:list-level-properties></text:list-level-style-number><text:list-level-style-number text:level="7" style:num-suffix="." style:num-format="1"><style:list-level-properties text:list-level-position-and-space-mode="label-alignment"><style:list-level-label-alignment text:label-followed-by="listtab" text:list-tab-stop-position="2in" fo:text-indent="-0.25in" fo:margin-left="2in"/></style:list-level-properties></text:list-level-style-number><text:list-level-style-number text:level="8" style:num-suffix="." style:num-format="1"><style:list-level-properties text:list-level-position-and-space-mode="label-alignment"><style:list-level-label-alignment text:label-followed-by="listtab" text:list-tab-stop-position="2.25in" fo:text-indent="-0.25in" fo:margin-left="2.25in"/></style:list-level-properties></text:list-level-style-number><text:list-level-style-number text:level="9" style:num-suffix="." style:num-format="1"><style:list-level-properties text:list-level-position-and-space-mode="label-alignment"><style:list-level-label-alignment text:label-followed-by="listtab" text:list-tab-stop-position="2.5in" fo:text-indent="-0.25in" fo:margin-left="2.5in"/></style:list-level-properties></text:list-level-style-number><text:list-level-style-number text:level="10" style:num-suffix="." style:num-format="1"><style:list-level-properties text:list-level-position-and-space-mode="label-alignment"><style:list-level-label-alignment text:label-followed-by="listtab" text:list-tab-stop-position="2.75in" fo:text-indent="-0.25in" fo:margin-left="2.75in"/></style:list-level-properties></text:list-level-style-number></text:list-style><style:style style:name="gr1" style:family="graphic"><style:graphic-properties svg:stroke-width="0.0201in" draw:marker-start="Rounded_20_short_20_Arrow" draw:marker-start-width="0.1701in" draw:marker-end-width="0.1701in" draw:textarea-horizontal-align="center" draw:textarea-vertical-align="middle" fo:padding-top="0.0102in" fo:padding-bottom="0.0102in" fo:padding-left="0.0102in" fo:padding-right="0.0102in" style:run-through="foreground" style:wrap="run-through" style:number-wrapped-paragraphs="no-limit" style:vertical-pos="from-top" style:vertical-rel="paragraph" style:horizontal-pos="from-left" style:horizontal-rel="paragraph" draw:wrap-influence-on-position="once-concurrent" style:flow-with-text="false"/></style:style><style:style style:name="gr2" style:family="graphic"><style:graphic-properties draw:stroke="solid" svg:stroke-width="0.0201in" svg:stroke-color="#000000" draw:marker-start-width="0.1701in" draw:marker-end-width="0.1701in" draw:fill="none" draw:fill-color="#ffffff" fo:min-height="0.1953in" fo:padding-top="0.05in" fo:padding-bottom="0.05in" fo:padding-left="0.05in" fo:padding-right="0.05in" style:run-through="foreground" style:wrap="run-through" style:number-wrapped-paragraphs="no-limit" style:vertical-pos="from-top" style:vertical-rel="paragraph" style:horizontal-pos="from-left" style:horizontal-rel="paragraph" draw:wrap-influence-on-position="once-concurrent" style:flow-with-text="false"/></style:style></office:automatic-styles><office:body><office:text text:use-soft-page-breaks="true"><office:forms form:automatic-focus="false" form:apply-design-mode="false"/><text:sequence-decls><text:sequence-decl text:display-outline-level="0" text:name="Illustration"/><text:sequence-decl text:display-outline-level="0" text:name="Table"/><text:sequence-decl text:display-outline-level="0" text:name="Text"/><text:sequence-decl text:display-outline-level="0" text:name="Drawing"/></text:sequence-decls><text:alphabetical-index-auto-mark-file xlink:href="../../../../Programming%20Perl/5.0/Chapters/perl01.sdi"/><text:p text:style-name="P37"><text:span text:style-name="T26">Custom </text:span>Python <text:span text:style-name="T26">3 for Salesforce</text:span></text:p><text:p text:style-name="CC-Section_20_number">Chapter <text:span text:style-name="T1">2</text:span></text:p><text:p text:style-name="CC-Section_20_name">Getting Started</text:p><text:p text:style-name="CC-lwall_20_quote">&quot;Now, it&apos;s my belief that Python is a lot easier than to teach to students programming and teach them C or C++ or Java at the same time because all the details of the languages are so much harder. Other scripting languages really don&apos;t work very well there either.&quot;</text:p><text:p text:style-name="CC-lwall_20_sig">-- Guido van Rossum</text:p><text:p text:style-name="CC-lwall_20_sig"/><text:p text:style-name="CC-lwall_20_sig"/><text:p text:style-name="P12"/><text:list xml:id="list6265686466492708604" text:style-name="WW8Num1"><text:list-header><text:p text:style-name="P41">Chapter <text:span text:style-name="T1">2</text:span> Objectives</text:p></text:list-header></text:list><text:list xml:id="list8121033006177585384" text:style-name="MT-Major_20_point_20_bullets"><text:list-item><text:p text:style-name="MT-Chapter_20_Objective">Using variables</text:p></text:list-item><text:list-item><text:p text:style-name="MT-Chapter_20_Objective">Avoiding names of keywords and builtins</text:p></text:list-item><text:list-item><text:p text:style-name="MT-Chapter_20_Objective">Understanding dynamic typing</text:p></text:list-item><text:list-item><text:p text:style-name="MT-Chapter_20_Objective">Creating string and numeric literals</text:p></text:list-item><text:list-item><text:p text:style-name="MT-Chapter_20_Objective">Learning string and numeric operators</text:p></text:list-item><text:list-item><text:p text:style-name="MT-Chapter_20_Objective">Sending output (optionally formatted) to the screen</text:p></text:list-item><text:list-item><text:p text:style-name="MT-Chapter_20_Objective">Getting command line parameters</text:p></text:list-item><text:list-item><text:p text:style-name="MT-Chapter_20_Objective">Reading user input from keyboard (STDIN)</text:p></text:list-item></text:list><text:list xml:id="list84848618456635" text:continue-list="list6265686466492708604" text:style-name="WW8Num1"><text:list-header><text:p text:style-name="P42">Using variables</text:p></text:list-header></text:list><text:list xml:id="list84848655452938" text:continue-list="list8121033006177585384" text:style-name="MT-Major_20_point_20_bullets"><text:list-item><text:p text:style-name="MT-Major_20_Point_20_Text">Variables are created when assigned to</text:p></text:list-item><text:list-item><text:p text:style-name="MT-Major_20_Point_20_Text">May hold any type of data</text:p></text:list-item><text:list-item><text:p text:style-name="MT-Major_20_Point_20_Text">Names are case sensitive</text:p></text:list-item><text:list-item><text:p text:style-name="MT-Major_20_Point_20_Text">Name may be any length</text:p></text:list-item></text:list><text:p text:style-name="Standard">Variables in Python are created by assigning a value to them. They are created and destroyed as needed by the Python interpreter. Variables may hold any type of data – string, numeric, Boolean, or other types. The data type is dynamically determined by the type of data assigned.</text:p><text:p text:style-name="Standard">Variable names are case sensitive: <text:span text:style-name="T5">Spam</text:span> <text:span text:style-name="T5">SPAM</text:span> and <text:span text:style-name="T5">spam</text:span> are three different variables.</text:p><text:p text:style-name="Standard">The names of variables may be any length.</text:p><text:p text:style-name="Standard">A variable must be assigned <text:span text:style-name="T7">some </text:span><text:span text:style-name="T11">value. A value of </text:span><text:span text:style-name="T12">None</text:span><text:span text:style-name="T11"> (null) may be assigned if no particular value is needed. <text:s/>It is good practice to make variable names consistent. Many Python programmers prefer </text:span><text:span text:style-name="T12">all_lower_case_with_underscores</text:span><text:span text:style-name="T11">.</text:span></text:p><text:p text:style-name="P5"/><text:p text:style-name="EX-Heading">Examples</text:p><text:p text:style-name="EX-Code">quantity = 5</text:p><text:p text:style-name="EX-Code">historian = &quot;AJP Taylor&quot;</text:p><text:p text:style-name="EX-Code">result = 123.456</text:p><text:p text:style-name="EX-Code">status = None</text:p><text:p text:style-name="Standard"/><text:p text:style-name="P8">Keywords</text:p><text:list xml:id="list84848668824305" text:continue-list="list84848655452938" text:style-name="MT-Major_20_point_20_bullets"><text:list-item text:start-value="1"><text:p text:style-name="MT-Major_20_Point_20_Text">Keywords are reserved</text:p></text:list-item><text:list-item><text:p text:style-name="MT-Major_20_Point_20_Text">Python keywords may not be used as variable or function names</text:p></text:list-item><text:list-item><text:p text:style-name="MT-Major_20_Point_20_Text">Built-in functions may be overwritten</text:p></text:list-item><text:list-item><text:p text:style-name="MT-Major_20_Point_20_Text">DON&apos;T OVERWRITE BUILTINS!</text:p></text:list-item></text:list><text:p text:style-name="Standard">Python keywords may not be used as identifiers. that is, you can&apos;t say <text:span text:style-name="MT-excmd">and = 5</text:span>. </text:p><text:p text:style-name="Standard">On the other hand, Python&apos;s builtin functions, such as <text:span text:style-name="T5">len()</text:span> or <text:span text:style-name="T5">int() </text:span><text:s/><text:span text:style-name="T7">may</text:span><text:span text:style-name="T11"> be used as identifiers, but that will overwrite the builtin&apos;s functionality, so you shouldn&apos;t do that. </text:span></text:p><text:p text:style-name="P5"/><text:p text:style-name="MT-Sidebar"><text:span text:style-name="T11">Be especially careful not to use </text:span><text:span text:style-name="T12">dir,</text:span><text:span text:style-name="T11"> </text:span><text:span text:style-name="T12">file,</text:span><text:span text:style-name="T11"> </text:span><text:span text:style-name="T12">id,</text:span><text:span text:style-name="T11"> </text:span><text:span text:style-name="T12">len,</text:span><text:span text:style-name="T11"> </text:span><text:span text:style-name="T12">max,</text:span><text:span text:style-name="T11"> </text:span><text:span text:style-name="T12">min,</text:span><text:span text:style-name="T11"> and </text:span><text:span text:style-name="T12">sum,</text:span><text:span text:style-name="T11"> as these are all builtin function names.</text:span></text:p><text:p text:style-name="Standard"/><text:p text:style-name="MT-Section">Python Keywords</text:p><text:p text:style-name="Preformatted_20_Text"/><text:p text:style-name="P23">False <text:s text:c="5"/>class <text:s text:c="5"/>finally <text:s text:c="3"/>is <text:s text:c="8"/>return</text:p><text:p text:style-name="P25">None <text:s text:c="6"/>continue <text:s text:c="2"/>for <text:s text:c="7"/>lambda <text:s text:c="4"/>try</text:p><text:p text:style-name="P25">True <text:s text:c="6"/>def <text:s text:c="7"/>from <text:s text:c="6"/>nonlocal <text:s text:c="2"/>while</text:p><text:p text:style-name="P25">and <text:s text:c="7"/>del <text:s text:c="7"/>global <text:s text:c="4"/>not <text:s text:c="7"/>with</text:p><text:p text:style-name="P25">as <text:s text:c="8"/>elif <text:s text:c="6"/>if <text:s text:c="8"/>or <text:s text:c="8"/>yield</text:p><text:p text:style-name="P25">assert <text:s text:c="4"/>else <text:s text:c="6"/>import <text:s text:c="4"/>pass</text:p><text:p text:style-name="P25">break <text:s text:c="5"/>except <text:s text:c="4"/>in <text:s text:c="8"/>raise</text:p><text:p text:style-name="P25"/><text:p text:style-name="ED-Todo"/><text:p text:style-name="P8">Builtin functions</text:p><table:table table:name="Table4" table:style-name="Table4"><table:table-column table:style-name="Table4.A"/><table:table-column table:style-name="Table4.B"/><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">abs()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">license()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">all()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">list()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">any()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">locals()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">bin()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">map()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">bool()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">max()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">bytearray()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">memoryview()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">bytes()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">min()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">callable()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">next()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">chr()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">object()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">classmethod()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">oct()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">cmp()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">open()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">compile()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">ord()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">complex()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">pow()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">copyright()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">print()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">credits()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">property()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">delattr()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">quit()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">dict()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">range()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">dir()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">repr()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">divmod()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">reversed()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">enumerate()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">round()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">eval()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">set()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">exec()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">setattr()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">exit()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">slice()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">filter()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">sorted()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">float()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">staticmethod()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">format()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">str()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">frozenset()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">sum()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">getattr()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">super()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">globals()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">tuple()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">hasattr()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">type()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">hash()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">vars()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">help()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">zip()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">hex()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">tuple()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">id()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">type()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">input()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">vars()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">int()</text:p></table:table-cell><table:table-cell table:style-name="Table4.A1" office:value-type="string"><text:p text:style-name="P4">zip()</text:p></table:table-cell></table:table-row></table:table><text:list xml:id="list84849168053718" text:continue-list="list84848618456635" text:style-name="WW8Num1"><text:list-header><text:p text:style-name="P42">Variable typing</text:p></text:list-header></text:list><text:list xml:id="list84849968226942" text:continue-list="list84848668824305" text:style-name="MT-Major_20_point_20_bullets"><text:list-item><text:p text:style-name="MT-Major_20_Point_20_Text">Python is strongly and dynamically typed</text:p></text:list-item><text:list-item><text:p text:style-name="MT-Major_20_Point_20_Text">Typing based on assigned literals</text:p></text:list-item></text:list><text:p text:style-name="Standard">Python is a typed language. That means that whenever you assign a value to a name, it is given a type. Python has many types built into the interpreter, such as <text:span text:style-name="T5">int</text:span>, <text:span text:style-name="T5">str</text:span>, and <text:span text:style-name="T5">float.</text:span> There are also many packages providing types, such as <text:span text:style-name="T5">date,</text:span> <text:span text:style-name="T5">re,</text:span> or <text:span text:style-name="T5">urllib2.</text:span></text:p><text:p text:style-name="Standard">Certain operations are only valid with the appropriate types. Python does not automatically convert strings to numbers or numbers to strings.</text:p><text:p text:style-name="Standard"/><text:p text:style-name="Standard"/><table:table table:name="Table7" table:style-name="Table7"><table:table-column table:style-name="Table7.A"/><table:table-column table:style-name="Table7.B"/><table:table-column table:style-name="Table7.C"/><table:table-row><table:table-cell table:style-name="Table7.A1" table:number-columns-spanned="3" office:value-type="string"><text:p text:style-name="P24">Typing Disciplines</text:p></table:table-cell><table:covered-table-cell/><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table7.A2" office:value-type="string"><text:p text:style-name="P19"/></table:table-cell><table:table-cell table:style-name="Table7.B4" office:value-type="string"><text:p text:style-name="P18">Dynamic</text:p></table:table-cell><table:table-cell table:style-name="Table7.C4" office:value-type="string"><text:p text:style-name="P18">Static</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table7.A4" office:value-type="string"><text:p text:style-name="P18">Weak</text:p></table:table-cell><table:table-cell table:style-name="Table7.B4" office:value-type="string"><text:p text:style-name="P19">awk<text:line-break/>csh, ksh, bash<text:line-break/>JavaScript<text:line-break/>Perl<text:line-break/>PHP<text:line-break/>Visual Basic</text:p></table:table-cell><table:table-cell table:style-name="Table7.C4" office:value-type="string"><text:p text:style-name="P19"/></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table7.A4" office:value-type="string"><text:p text:style-name="P18">Strong</text:p></table:table-cell><table:table-cell table:style-name="Table7.B4" office:value-type="string"><text:p text:style-name="P19">Common Lisp<text:line-break/>Python<text:line-break/>Ruby</text:p></table:table-cell><table:table-cell table:style-name="Table7.C4" office:value-type="string"><text:p text:style-name="P19">C, C++<text:line-break/>C#<text:line-break/>COBOL<text:line-break/>Fortran<text:line-break/>Java<text:line-break/>Visual Basic</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="Standard"/><text:p text:style-name="Standard"/><text:p text:style-name="Standard"/><text:p text:style-name="Standard"/><text:p text:style-name="Standard"/><text:p text:style-name="P8">Strings</text:p><text:list xml:id="list84848738490801" text:continue-list="list84849968226942" text:style-name="MT-Major_20_point_20_bullets"><text:list-item text:start-value="1"><text:p text:style-name="MT-Major_20_Point_20_Text">All strings are Unicode</text:p></text:list-item><text:list-item text:start-value="1"><text:p text:style-name="P35">String literals</text:p></text:list-item></text:list><text:p text:style-name="P38"><text:tab/>* Single-delimited (single-line only) </text:p><text:p text:style-name="P38"><text:tab/>* Triple-delimited (can be multi-line)</text:p><text:list xml:id="list84850276947111" text:continue-list="list84848738490801" text:style-name="MT-Major_20_point_20_bullets"><text:list-item text:start-value="1"><text:p text:style-name="MT-Major_20_Point_20_Text">Single-quote or double-quote symbols OK</text:p></text:list-item><text:list-item><text:p text:style-name="MT-Major_20_Point_20_Text">Backslashes introduce <text:span text:style-name="T7">escape sequences</text:span></text:p></text:list-item><text:list-item><text:p text:style-name="MT-Major_20_Point_20_NO_20_BULLET">Strings can be raw (escape sequences not interpreted)</text:p></text:list-item></text:list><text:p text:style-name="Standard">Python <text:span text:style-name="T18">strings</text:span> <text:span text:style-name="T18">are</text:span> Unicode strings. They can be initialized with several types of string literals.</text:p><text:p text:style-name="Standard"/><text:p text:style-name="MT-Sidebar">Adjacent string literals are concatenated.</text:p><text:p text:style-name="Standard"/><text:p text:style-name="Standard"/><text:p text:style-name="P8">Single-<text:span text:style-name="T18">delimited</text:span> string literals</text:p><text:list xml:id="list84849515228467" text:continue-list="list84850276947111" text:style-name="MT-Major_20_point_20_bullets"><text:list-item text:start-value="1"><text:p text:style-name="MT-Major_20_Point_20_Text">Enclosed in pair of single or double quotes</text:p></text:list-item><text:list-item><text:p text:style-name="MT-Major_20_Point_20_Text">May not contain embedded newlines</text:p></text:list-item><text:list-item><text:p text:style-name="MT-Major_20_Point_20_Text">Backslash is treated specially.</text:p></text:list-item></text:list><text:p text:style-name="Standard">Single-delimited strings are enclosed in a pair of single or double quotes.</text:p><text:p text:style-name="Standard">Escape codes, which start with a backslash, are interpreted specially. This makes it possible to include control characters such as tab and newline in a string. <text:s/></text:p><text:p text:style-name="Standard"><text:span text:style-name="T18">S</text:span>ingle-delimited strings may not contain an embedded newline; that is, they may not be spread over multiple physical lines. They may contain \n, the escape code for a new line. </text:p><text:p text:style-name="Standard">There is no difference in meaning between single and double quotes. The term &quot;single-quoted&quot; in Python means that there is one quote symbol at each end of the sting literal. </text:p><text:p text:style-name="EX-Heading"/><text:p text:style-name="EX-Heading">Examples</text:p><text:p text:style-name="EX-Code">name = &quot;John Smith&quot;</text:p><text:p text:style-name="EX-Code">title = &apos;Grand Poobah&apos;</text:p><text:p text:style-name="EX-Code">color = &quot;red&quot;</text:p><text:p text:style-name="EX-Code">size = &quot;large&quot;</text:p><text:p text:style-name="EX-Code">poem = &quot;I think that I will never see\na poem lovely as a tree&quot;</text:p><text:p text:style-name="Standard"/><text:p text:style-name="P8">Triple-delimited string literals</text:p><text:list xml:id="list84850545997165" text:continue-list="list84849515228467" text:style-name="MT-Major_20_point_20_bullets"><text:list-item text:start-value="1"><text:p text:style-name="MT-Major_20_Point_20_Text">Used for multi-line strings</text:p></text:list-item><text:list-item><text:p text:style-name="MT-Major_20_Point_20_Text">Can have embedded quote characters</text:p></text:list-item><text:list-item><text:p text:style-name="MT-Major_20_Point_20_Text">Used for docstrings</text:p></text:list-item></text:list><text:p text:style-name="Standard">Triple-delimited strings use three double or single quotes at each end of the text. They are the same as single-delimited strings, except that individual single or double quotes are left alone, and that embedded newlines are preserved. </text:p><text:p text:style-name="Standard">Triple-delimited <text:s/>text is used for text containing literal quotes as well as documentation and boiler-plate text.</text:p><text:p text:style-name="EX-Heading">Examples</text:p><text:p text:style-name="EX-Code">name = &quot;&quot;&quot;James Earl &quot;Jimmy&quot; Carter&quot;&quot;&quot;</text:p><text:p text:style-name="EX-Code"/><text:p text:style-name="EX-Code">warning = &quot;&quot;&quot;</text:p><text:p text:style-name="EX-Code"><text:s text:c="6"/>Professional driver on closed course</text:p><text:p text:style-name="EX-Code"><text:s text:c="6"/>Do not attempt</text:p><text:p text:style-name="EX-Code"><text:s text:c="6"/>Your mileage may vary</text:p><text:p text:style-name="EX-Code"><text:s text:c="6"/>Ask your doctor if Python is right for you</text:p><text:p text:style-name="EX-Code">&quot;&quot;&quot;</text:p><text:p text:style-name="EX-Code"/><text:p text:style-name="EX-Code">query = &apos;&apos;&apos;</text:p><text:p text:style-name="EX-Code"><text:s text:c="3"/>select fname, lname</text:p><text:p text:style-name="EX-Code"><text:s text:c="3"/>from contacts</text:p><text:p text:style-name="EX-Code"><text:s text:c="3"/>where zipcode = &apos;90210&apos;</text:p><text:p text:style-name="EX-Code"><text:s text:c="3"/>order by lname</text:p><text:p text:style-name="EX-Code">&apos;&apos;&apos;</text:p><text:p text:style-name="Standard"/><text:p text:style-name="MT-Sidebar">The quotes on both ends of the text must match – use either all single or all double quotes, whether it&apos;s a normal or a Triple-delimited literal.</text:p><text:p text:style-name="Standard"/><text:p text:style-name="Standard"/><text:p text:style-name="P8">Raw string literals</text:p><text:list xml:id="list84849712441711" text:continue-list="list84850545997165" text:style-name="MT-Major_20_point_20_bullets"><text:list-item text:start-value="1"><text:p text:style-name="MT-Major_20_Point_20_Text">Start with r</text:p></text:list-item><text:list-item><text:p text:style-name="MT-Major_20_Point_20_Text">Do not interpret backslashes</text:p></text:list-item></text:list><text:p text:style-name="Standard">If a literal starts with <text:span text:style-name="T5">r</text:span> before the quote marks, then it is a raw string literal. Backslashes are not interpreted.</text:p><text:p text:style-name="Standard">This is handy if the text to be output contains literal backslashes, such as many regular expression patterns, or Windows paths. </text:p><text:p text:style-name="EX-Heading">Examples</text:p><text:p text:style-name="EX-Code">pat = r&quot;\w+\s+\w+&quot;</text:p><text:p text:style-name="EX-Code">loc = r&quot;c:\temp&quot;</text:p><text:p text:style-name="EX-Code">msg = r&quot;please put a newline character (\n) after each line&quot;</text:p><text:p text:style-name="EX-Code"/><text:p text:style-name="MT-Sidebar">This is similar to the use of single quotes in some other languages.</text:p><text:p text:style-name="P8">Unicode characters</text:p><text:list xml:id="list84849317007694" text:continue-list="list84849712441711" text:style-name="MT-Major_20_point_20_bullets"><text:list-item text:start-value="1"><text:p text:style-name="MT-Major_20_Point_20_Text">How to specify non-ASCII characters</text:p></text:list-item></text:list><text:p text:style-name="Standard">Unicode characters can be specified using either the code point (numeric value) or the name (string). For code points, use \u<text:span text:style-name="T7">XXXX</text:span>, where <text:span text:style-name="T7">XXXX</text:span> is the hex value of the code point. To specify the character name, use <text:span text:style-name="T5">\N{</text:span><text:span text:style-name="T8">name</text:span><text:span text:style-name="T5">}</text:span>. Remember escapes are ignored <text:span text:style-name="T11">in </text:span>raw strings. </text:p><text:p text:style-name="EX-Heading">Example</text:p><text:p text:style-name="EX-Filename">unicode.py</text:p><text:p text:style-name="EX-Code">print(&apos;we spent \u20ac1.23M for an original C\u00e9zanne&apos;)</text:p><text:p text:style-name="EX-Code">print(&apos;26\u00B0&apos;)</text:p><text:p text:style-name="EX-Code">print(&apos;26\N{DEGREE SIGN}&apos;)</text:p><text:p text:style-name="EX-Code">print(&apos;26\u00B0&apos;)</text:p><text:p text:style-name="EX-Code">print(r&apos;26\u00B0\n&apos;)</text:p><text:p text:style-name="EX-Code">print(r&apos;26\N{DEGREE SIGN}&apos;)</text:p><text:p text:style-name="EX-Code"/><text:p text:style-name="P13">unicode.py</text:p><text:p text:style-name="EX-Output">we spent €1.23M for an original Cézanne</text:p><text:p text:style-name="EX-Output">26°</text:p><text:p text:style-name="EX-Output">26°</text:p><text:p text:style-name="EX-Output">26°</text:p><text:p text:style-name="EX-Output">26°\u00B0\n</text:p><text:p text:style-name="EX-Output">26\N{DEGREE SIGN}</text:p><text:p text:style-name="EX-Code"/><text:p text:style-name="MT-Sidebar">See <text:s/><text:a xlink:type="simple" xlink:href="http://www.unicode.org/charts" text:style-name="Internet_20_link" text:visited-style-name="Visited_20_Internet_20_Link">www.unicode.org/charts </text:a>for lists of Unicode character names</text:p><text:p text:style-name="Standard"/><table:table table:name="Table1" table:style-name="Table1"><table:table-column table:style-name="Table1.A"/><table:table-column table:style-name="Table1.B"/><table:table-row><table:table-cell table:style-name="Table1.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="TA-Title">Escape Sequences</text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table1.A2" office:value-type="string"><text:p text:style-name="TA-Heading"><text:s/>Sequence</text:p></table:table-cell><table:table-cell table:style-name="Table1.A1" office:value-type="string"><text:p text:style-name="TA-Heading">Description</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table1.A2" office:value-type="string"><text:p text:style-name="EX-Code"><text:span text:style-name="Source_20_Text">\</text:span><text:span text:style-name="Variable">newline</text:span></text:p></table:table-cell><table:table-cell table:style-name="Table1.A1" office:value-type="string"><text:p text:style-name="TA-Text">Embedded newline</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table1.A2" office:value-type="string"><text:p text:style-name="EX-Code"><text:span text:style-name="Source_20_Text">\\</text:span></text:p></table:table-cell><table:table-cell table:style-name="Table1.A1" office:value-type="string"><text:p text:style-name="TA-Text">Backslash</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table1.A2" office:value-type="string"><text:p text:style-name="EX-Code"><text:span text:style-name="Source_20_Text">\&apos;</text:span> </text:p></table:table-cell><table:table-cell table:style-name="Table1.A1" office:value-type="string"><text:p text:style-name="TA-Text">Single quote</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table1.A2" office:value-type="string"><text:p text:style-name="EX-Code"><text:span text:style-name="Source_20_Text">\&quot;</text:span> </text:p></table:table-cell><table:table-cell table:style-name="Table1.A1" office:value-type="string"><text:p text:style-name="TA-Text">Double quote</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table1.A2" office:value-type="string"><text:p text:style-name="EX-Code"><text:span text:style-name="Source_20_Text">\a</text:span> </text:p></table:table-cell><table:table-cell table:style-name="Table1.A1" office:value-type="string"><text:p text:style-name="TA-Text">BEL</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table1.A2" office:value-type="string"><text:p text:style-name="EX-Code"><text:span text:style-name="Source_20_Text">\b</text:span> </text:p></table:table-cell><table:table-cell table:style-name="Table1.A1" office:value-type="string"><text:p text:style-name="TA-Text">BACKSPACE </text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table1.A2" office:value-type="string"><text:p text:style-name="EX-Code"><text:span text:style-name="Source_20_Text">\f</text:span></text:p></table:table-cell><table:table-cell table:style-name="Table1.A1" office:value-type="string"><text:p text:style-name="TA-Text">FORMFEED</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table1.A2" office:value-type="string"><text:p text:style-name="EX-Code"><text:span text:style-name="Source_20_Text">\n</text:span> </text:p></table:table-cell><table:table-cell table:style-name="Table1.A1" office:value-type="string"><text:p text:style-name="TA-Text">LINEFEED</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table1.A2" office:value-type="string"><text:p text:style-name="EX-Code"><text:span text:style-name="Source_20_Text">\N{</text:span><text:span text:style-name="Variable">name</text:span><text:span text:style-name="Source_20_Text">}</text:span> <text:s/></text:p></table:table-cell><table:table-cell table:style-name="Table1.A1" office:value-type="string"><text:p text:style-name="TA-Text">Unicode character name</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table1.A2" office:value-type="string"><text:p text:style-name="EX-Code"><text:span text:style-name="Source_20_Text">\r</text:span> </text:p></table:table-cell><table:table-cell table:style-name="Table1.A1" office:value-type="string"><text:p text:style-name="TA-Text">Carriage Return</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table1.A2" office:value-type="string"><text:p text:style-name="EX-Code"><text:span text:style-name="Source_20_Text">\t</text:span> </text:p></table:table-cell><table:table-cell table:style-name="Table1.A1" office:value-type="string"><text:p text:style-name="TA-Text">TAB</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table1.A2" office:value-type="string"><text:p text:style-name="EX-Code"><text:span text:style-name="Source_20_Text">\u</text:span><text:span text:style-name="Variable">xxxx</text:span> <text:s/></text:p></table:table-cell><table:table-cell table:style-name="Table1.A1" office:value-type="string"><text:p text:style-name="TA-Text">16-bit Unicode code point</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table1.A2" office:value-type="string"><text:p text:style-name="EX-Code"><text:span text:style-name="Source_20_Text">\U</text:span><text:span text:style-name="Variable">xxxxxxxx</text:span> </text:p></table:table-cell><table:table-cell table:style-name="Table1.A1" office:value-type="string"><text:p text:style-name="TA-Text">32-bit Unicode code point</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table1.A2" office:value-type="string"><text:p text:style-name="EX-Code"><text:span text:style-name="Variable"><text:span text:style-name="T14">\ooo</text:span></text:span></text:p></table:table-cell><table:table-cell table:style-name="Table1.A1" office:value-type="string"><text:p text:style-name="TA-Text">Char with octal ASCII value <text:span text:style-name="T7">ooo</text:span></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table1.A2" office:value-type="string"><text:p text:style-name="EX-Code"><text:span text:style-name="Variable"><text:span text:style-name="T14">\xhh</text:span></text:span> </text:p></table:table-cell><table:table-cell table:style-name="Table1.A1" office:value-type="string"><text:p text:style-name="TA-Text">Character with hex ASCII <text:s/>value <text:span text:style-name="T7">hh</text:span></text:p></table:table-cell></table:table-row></table:table><text:list xml:id="list84848646458576" text:continue-list="list84849168053718" text:style-name="WW8Num1"><text:list-header><text:p text:style-name="P42">String operators and methods</text:p></text:list-header></text:list><text:list xml:id="list84848486143003" text:continue-list="list84849317007694" text:style-name="MT-Major_20_point_20_bullets"><text:list-item><text:p text:style-name="MT-Major_20_Point_20_Text"><text:span text:style-name="T7">Methods</text:span><text:span text:style-name="T11"> called from string objects</text:span></text:p></text:list-item><text:list-item><text:p text:style-name="P31">Some builtin functions apply to strings</text:p></text:list-item><text:list-item><text:p text:style-name="P31">Strings cannot be modified in-place</text:p></text:list-item><text:list-item><text:p text:style-name="MT-Major_20_Point_20_Text">Modified copies of strings are returned</text:p></text:list-item></text:list><text:p text:style-name="Standard">Python has a rich set of operators and methods for manipulating strings.</text:p><text:p text:style-name="Standard">Methods are called from string objects (variables) using &quot;dot notation&quot; – <text:span text:style-name="T8">STR.method()</text:span>.</text:p><text:p text:style-name="Standard">Strings are <text:span text:style-name="T9">immutable</text:span> – they can not be changed (modified in-place). String functions generally return a modified <text:span text:style-name="T7">copy</text:span> of the string.</text:p><text:p text:style-name="Standard">Use + to concatenate two strings.</text:p><text:p text:style-name="Standard">String methods may be chained. That is, you can call a string method on the string returned by another method. </text:p><text:p text:style-name="Standard">If you need a substring function, that will be provided by the <text:span text:style-name="T7">slice</text:span> operation in chapter 5. </text:p><text:p text:style-name="EX-Heading"/><text:p text:style-name="MT-Sidebar">String methods may be called on literal strings as well<text:line-break/><text:span text:style-name="T16">&quot;abc&quot;.upper()<text:line-break/>&quot;,&quot;.join(some_list)</text:span></text:p><text:p text:style-name="Standard"/><text:p text:style-name="P9">Examples</text:p><text:p text:style-name="EX-Filename">strings.py</text:p><text:p text:style-name="P28">a = &quot;My hovercraft is full of EELS&quot;</text:p><text:p text:style-name="P28"/><text:p text:style-name="P28">print(&quot;original:&quot;,a)</text:p><text:p text:style-name="P28">print(&quot;upper:&quot;,a.upper())</text:p><text:p text:style-name="P28">print(&quot;lower:&quot;,a.lower())</text:p><text:p text:style-name="P28">print(&quot;swapcase:&quot;,a.swapcase())</text:p><text:p text:style-name="P28">print(&quot;title:&quot;,a.title())</text:p><text:p text:style-name="P28">print(&quot;e count (normal):&quot;,a.count(&apos;e&apos;))</text:p><text:p text:style-name="P28">print(&quot;e count (lower-case):&quot;,a.lower().count(&apos;e&apos;))</text:p><text:p text:style-name="P28">print(&quot;found EELS at:&quot;,a.find(&apos;EELS&apos;))</text:p><text:p text:style-name="P28">print(&quot;found WOLVERINES at:&quot;,a.find(&apos;WOLVERINES&apos;))</text:p><text:p text:style-name="P28"/><text:p text:style-name="P28">b = &quot;graham&quot;</text:p><text:p text:style-name="P28">print(&quot;Capitalized:&quot;,b.capitalize())</text:p><text:p text:style-name="EX-Code"/><text:p text:style-name="P13">strings.py</text:p><text:p text:style-name="EX-Output">original: <text:s/>My hovercraft is full of EELS </text:p><text:p text:style-name="EX-Output">upper: <text:s/>MY HOVERCRAFT IS FULL OF EELS </text:p><text:p text:style-name="EX-Output">lower: <text:s/>my hovercraft is full of eels </text:p><text:p text:style-name="EX-Output">swapcase: <text:s/>mY HOVERCRAFT IS FULL OF eels </text:p><text:p text:style-name="EX-Output">title: <text:s/>My Hovercraft Is Full Of Eels </text:p><text:p text:style-name="EX-Output">e count (normal): 1 </text:p><text:p text:style-name="EX-Output">e count (lower-case): 3 </text:p><text:p text:style-name="EX-Output">found EELS at: 26 </text:p><text:p text:style-name="EX-Output">found WOLVERINES at: -1 </text:p><text:p text:style-name="EX-Output">Capitalized: Graham </text:p><text:p text:style-name="Standard"/><text:p text:style-name="Standard"/><text:p text:style-name="P11"/><table:table table:name="Table6" table:style-name="Table6"><table:table-column table:style-name="Table6.A"/><table:table-column table:style-name="Table6.B"/><table:table-header-rows><table:table-row><table:table-cell table:style-name="Table6.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="TA-Title">String Methods and Functions</text:p></table:table-cell><table:covered-table-cell/></table:table-row></table:table-header-rows><table:table-row><table:table-cell table:style-name="Table6.A2" office:value-type="string"><text:p text:style-name="TA-Heading">method</text:p></table:table-cell><table:table-cell table:style-name="Table6.B2" office:value-type="string"><text:p text:style-name="TA-Heading">description</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A2" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.capitalize()</text:p></table:table-cell><table:table-cell table:style-name="Table6.B2" office:value-type="string"><text:p text:style-name="P15">s capitalized</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A2" office:value-type="string"><text:p text:style-name="P21">s.casefold()</text:p></table:table-cell><table:table-cell table:style-name="Table6.B2" office:value-type="string"><text:p text:style-name="P16">Version of s suitable for caseless comparison</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A2" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.center(w)</text:p><text:p text:style-name="Table_20_Contents">s.center(w,f)</text:p></table:table-cell><table:table-cell table:style-name="Table6.B2" office:value-type="string"><text:p text:style-name="P15">s centered in string of width w, padded with f </text:p><text:p text:style-name="P17">f is space unless specified</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A2" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.count(b)</text:p><text:p text:style-name="Table_20_Contents">s.count(b,i)</text:p><text:p text:style-name="Table_20_Contents">s.count(b,i,j)</text:p></table:table-cell><table:table-cell table:style-name="Table6.B2" office:value-type="string"><text:p text:style-name="Table_20_Contents"><text:span text:style-name="T15"># occurrences of b in s[i:j]</text:span> </text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.encode(c)</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="P15">s encoded as a <text:span text:style-name="T5">bytes</text:span> object</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.endswith(<text:span text:style-name="T15">e,i,j)</text:span></text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">T if s[i:j] ends with e</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.expandtabs()</text:p><text:p text:style-name="Table_20_Contents">s.expandtabs(t)</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s with tabs expanded to t spaces (default 8)</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.find(b)</text:p><text:p text:style-name="Table_20_Contents">s.find(b,i)</text:p><text:p text:style-name="Table_20_Contents">s.find(b,i,j)</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">index of 1st occurrence of b in s[i:j]</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.format(p1,...)</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">Return format<text:span text:style-name="T19">ted</text:span> <text:span text:style-name="T19">string from s</text:span> where <text:s/><text:span text:style-name="T19">{} </text:span>placeholders are replaced with parameters p1, etc</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="P20">s.format_map(<text:span text:style-name="T22">m</text:span>)</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="P20">Return formatted string s where {key} placehoders filled in from <text:span text:style-name="T22">mapping type m</text:span></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.index(b)</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">Like find, but raise ValueError if b not found</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.isalnum()</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">T if s contains only letters and digits</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.isalpha()</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">T if s contains only letters </text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.isdecimal()</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">T if s contains only decimal characters (same as isdigit() if locale is EN)</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.isdigit</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">T if s contains only digits</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.isidentifier()</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">T if s is a valid identifier</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.islower()</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">T if all letters in s are lowercase</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.isnumeric()</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">T if all letters in s are numeric (any Unicode numeric character)</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.isprintable()</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">T if if all characters in the string are printable or the string is empty</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.isspace()</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">T if s contains only whitespace</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.istitle()</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">T if s contains only title cased words (like &quot;Xxxx&quot;)</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.isupper()</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">T if all letters in s are uppercase</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.join(m)</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">Elements of sequence m joined with s as delimiter</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">len(s)</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">Length of string s</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.ljust(w)</text:p><text:p text:style-name="Table_20_Contents">s.ljust(w,f)</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="P15">s left justified in string of width w, padded with f </text:p><text:p text:style-name="P17">f is space unless specified</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.lower()</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s converted to lowercase</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.lstrip()</text:p><text:p text:style-name="Table_20_Contents">s.lstrip(c)</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s with all characters in c stripped from beginning</text:p><text:p text:style-name="P17">c defaults to whitespace</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.maketrans()</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">create a translation table for use with translate()</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.partition(b)</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">return tuple with part of s before b, b, part of s after b </text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.replace(m,n)</text:p><text:p text:style-name="Table_20_Contents"><text:soft-page-break/>s.replace(m,n,c)</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s with c occurrences of m replaced with n</text:p><text:p text:style-name="P17"><text:soft-page-break/>unlimited if c not specified</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.rfind(b)</text:p><text:p text:style-name="Table_20_Contents">s.rfind(b,i,j)</text:p><text:p text:style-name="Table_20_Contents">s.rindex(b)</text:p><text:p text:style-name="Table_20_Contents">s.rindex(b,i,j)</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">Like find() and index(), except return last occurrence</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.rjust(w)</text:p><text:p text:style-name="Table_20_Contents">s.rjust(w,f)</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="P15">s right justified in string of width w, padded with f </text:p><text:p text:style-name="P17">f is space unless specified</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.rpartition(b)</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">Same as partition(), but last occurrence of b</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.rsplit(b)</text:p><text:p text:style-name="Table_20_Contents">s.rsplit(b,c)</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">list of tokens after splitting s on delimiter b</text:p><text:p text:style-name="P17">if c specified, at most c splits are done <text:span text:style-name="T5">from the right</text:span></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.rstrip()</text:p><text:p text:style-name="Table_20_Contents">s.rstrip(c)</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s with all characters in c stripped from end</text:p><text:p text:style-name="P17">c defaults to whitespace</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.split(b)</text:p><text:p text:style-name="Table_20_Contents">s.split(b,c)</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">list of tokens after splitting s on delimiter b</text:p><text:p text:style-name="P17">if c specified, at most c splits are done </text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.splitlines()</text:p><text:p text:style-name="Table_20_Contents">s.splitlines(k)</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">list of lines (split on \n)</text:p><text:p text:style-name="P17">\n removed unless k is T</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.startswith(<text:span text:style-name="T15">e,i,j)</text:span></text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">T if s[i:j] starts with e</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.strip()</text:p><text:p text:style-name="Table_20_Contents">s.strip(c)</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s with all chars in c stripped from both ends</text:p><text:p text:style-name="P17">c <text:s/>defaults to whitespace</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.swapcase()</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s with case of all letters inverted</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.title()</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s converted to title case</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.translate(t)</text:p><text:p text:style-name="Table_20_Contents">s.translate(t,d)</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s with chars in table t translated</text:p><text:p text:style-name="P17">chars in string d deleted if d specified</text:p><text:p text:style-name="P22">t must be exactly 256 chars long</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.upper()</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s converted to upper case</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s.zfill(w)</text:p></table:table-cell><table:table-cell table:style-name="Table6.B7" office:value-type="string"><text:p text:style-name="Table_20_Contents">s left-padded with zeros to width w</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P8">Numeric literals</text:p><text:list xml:id="list84849265093012" text:continue-list="list84848486143003" text:style-name="MT-Major_20_point_20_bullets"><text:list-item text:start-value="1"><text:p text:style-name="MT-Major_20_Point_20_Text"><text:span text:style-name="T25">Four</text:span> kinds of numeric objects</text:p></text:list-item><text:list-item><text:p text:style-name="P36"><text:tab/>Booleans</text:p></text:list-item><text:list-item><text:p text:style-name="P36"><text:tab/>Integers</text:p></text:list-item><text:list-item><text:p text:style-name="P36"><text:tab/>Floats</text:p></text:list-item><text:list-item><text:p text:style-name="P36"><text:tab/>Complex numbers</text:p></text:list-item><text:list-item><text:p text:style-name="MT-Major_20_Point_20_Text">Integer literals can be decimal, octal, hex, or binary</text:p></text:list-item><text:list-item><text:p text:style-name="MT-Major_20_Point_20_Text">Floating point can be traditional or scientific notation</text:p></text:list-item></text:list><text:list xml:id="list84849398081236" text:continue-list="list84848646458576" text:style-name="WW8Num1"><text:list-header><text:p text:style-name="P39">Boolean</text:p><text:p text:style-name="P40">Boolean values can be 1 (true) or 0 (false). The keywords <text:span text:style-name="MT-excmd">True</text:span> and <text:span text:style-name="MT-excmd">False</text:span> can be used to represent these values, as well. </text:p><text:p text:style-name="P39">Integers</text:p><text:p text:style-name="P30">Integers can be specified as decimal, octal, or hexadecimal. Prefix the number with <text:span text:style-name="T5">0o</text:span> for octal, or <text:span text:style-name="T5">0x</text:span> for hex. Integers are signed, and correspond to the natural size of an int on the host computer.</text:p></text:list-header></text:list><text:p text:style-name="MT-Section">Floats</text:p><text:p text:style-name="Text_20_body">Floating point integers may be specified in traditional format or in scientific notation. </text:p><text:p text:style-name="MT-Section">Complex Numbers</text:p><text:p text:style-name="Text_20_body">Complex numbers may be specified by adding <text:span text:style-name="T5">J</text:span> to the end of the number.</text:p><text:p text:style-name="Text_20_body"/><text:p text:style-name="P9"/><text:p text:style-name="EX-Heading">Examples</text:p><text:p text:style-name="EX-Filename">numeric.py</text:p><text:p text:style-name="EX-Code">a = 5</text:p><text:p text:style-name="EX-Code">b = 10</text:p><text:p text:style-name="EX-Code">c = 20.22</text:p><text:p text:style-name="EX-Code">d = 0o123</text:p><text:p text:style-name="EX-Code">e = 0xdeadbeef</text:p><text:p text:style-name="EX-Code">f = 0b10011101</text:p><text:p text:style-name="EX-Code"/><text:p text:style-name="EX-Code">print(&quot;a,b,c&quot;,a,b,c)</text:p><text:p text:style-name="EX-Code">print(&quot;a + b&quot;,a+b)</text:p><text:p text:style-name="EX-Code">print(&quot;a + c&quot;,a+c)</text:p><text:p text:style-name="EX-Code">print(&quot;d&quot;,d)</text:p><text:p text:style-name="EX-Code">print(&quot;e&quot;,e)</text:p><text:p text:style-name="EX-Code">print(&quot;f&quot;,f)</text:p><text:p text:style-name="EX-Code"/><text:p text:style-name="P13">numeric.py</text:p><text:p text:style-name="EX-Output">a,b,c 5 10 20.22</text:p><text:p text:style-name="EX-Output">a + b 15</text:p><text:p text:style-name="EX-Output">a + c 25.22</text:p><text:p text:style-name="EX-Output">d 83</text:p><text:p text:style-name="EX-Output">e 3735928559</text:p><text:p text:style-name="EX-Output">f 157</text:p><text:list xml:id="list84850131016675" text:continue-numbering="true" text:style-name="WW8Num1"><text:list-header><text:p text:style-name="P42">Math operators and expressions</text:p></text:list-header></text:list><text:list xml:id="list84850093226887" text:continue-list="list84849265093012" text:style-name="MT-Major_20_point_20_bullets"><text:list-item text:start-value="1"><text:p text:style-name="MT-Major_20_Point_20_Text">Many built-in operators and expressions</text:p></text:list-item><text:list-item><text:p text:style-name="MT-Major_20_Point_20_Text">An operation between and integer and a float results in <text:tab/>a float</text:p></text:list-item></text:list><text:p text:style-name="Standard">Python has many math operators and functions. Later in this course we will look at some libraries with extended math functionality.</text:p><text:p text:style-name="Standard">Most of the operators should look familiar; a few may not:</text:p><text:p text:style-name="MT-Section">Division</text:p><text:p text:style-name="Text_20_body">Division (/) always produces a float result.</text:p><text:p text:style-name="MT-Section">Assignment-with-operation</text:p><text:p text:style-name="Standard">Python supports C-style assignment-with-operation. For instance, <text:span text:style-name="MT-excmd">x += 5</text:span> adds 5 to variable <text:span text:style-name="T5">x</text:span>. This works for nearly any operator in the format VARIABLE OP=VALUE.</text:p><text:p text:style-name="MT-Section">Exponentiation</text:p><text:p text:style-name="Standard">To raise a number to a power, use the <text:span text:style-name="MT-excmd">**</text:span> (exponentiation) operator or the <text:span text:style-name="T5">pow()</text:span> function. </text:p><text:p text:style-name="MT-Section">Floored Division</text:p><text:p text:style-name="Standard">Using the floored division operator <text:span text:style-name="MT-excmd">//</text:span>, the result is always rounded down to the nearest whole number. If both operands are integers, the result is an integer; otherwise, the result is a float.</text:p><text:p text:style-name="Standard"/><text:p text:style-name="MT-Sidebar">Python does not have the ++ and -- <text:s/>(post-increment and post-decrement) operators common to many languages derived from C.</text:p><text:p text:style-name="Standard"/><text:p text:style-name="Standard"/><text:p text:style-name="Standard"/><text:p text:style-name="P9">Examples</text:p><text:p text:style-name="EX-Filename">math_op<text:span text:style-name="T21">erators</text:span>.py</text:p><text:p text:style-name="EX-Code">x = 5</text:p><text:p text:style-name="EX-Code">x += 10</text:p><text:p text:style-name="EX-Code">y = 22</text:p><text:p text:style-name="EX-Code">y *= 3</text:p><text:p text:style-name="EX-Code">z = 98.7</text:p><text:p text:style-name="EX-Code">print(&quot;x is &quot;,x)</text:p><text:p text:style-name="EX-Code">print(&quot;y is &quot;,y)</text:p><text:p text:style-name="EX-Code">print(&quot;2^16&quot;,2**16)</text:p><text:p text:style-name="EX-Code">print(&quot;x / y&quot;,x/y)</text:p><text:p text:style-name="EX-Code">print(&quot;x // y&quot;,x//y)</text:p><text:p text:style-name="EX-Code">print(&quot;x / z&quot;,x/z)</text:p><text:p text:style-name="EX-Code">print(&quot;x // z&quot;,x//z)</text:p><text:p text:style-name="EX-Code"/><text:p text:style-name="P13">math_op<text:span text:style-name="T21">erators</text:span>.py</text:p><text:p text:style-name="EX-Output">x is <text:s/>15</text:p><text:p text:style-name="EX-Output">y is <text:s/>66</text:p><text:p text:style-name="EX-Output">2^16 65536</text:p><text:p text:style-name="EX-Output">x / y 0.22727272727272727</text:p><text:p text:style-name="EX-Output">x // y 0</text:p><text:p text:style-name="EX-Output">x / z 0.1519756838905775</text:p><text:p text:style-name="EX-Output">x // z 0.0</text:p><text:p text:style-name="Standard"/><text:p text:style-name="P11"/><table:table table:name="Table5" table:style-name="Table5"><table:table-column table:style-name="Table5.A"/><table:table-column table:style-name="Table5.B"/><table:table-row><table:table-cell table:style-name="Table5.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="TA-Title">Python Math Operators and Functions</text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table5.A2" office:value-type="string"><text:p text:style-name="TA-Heading">Operator or Function</text:p></table:table-cell><table:table-cell table:style-name="Table5.B2" office:value-type="string"><text:p text:style-name="TA-Heading">What it does</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table5.A2" office:value-type="string"><text:p text:style-name="Standard"><text:span text:style-name="Variable">x</text:span><text:span text:style-name="Source_20_Text"> + </text:span><text:span text:style-name="Variable">y</text:span></text:p></table:table-cell><table:table-cell table:style-name="Table5.B2" office:value-type="string"><text:p text:style-name="Standard">sum of <text:span text:style-name="Variable">x</text:span> and <text:span text:style-name="Variable">y</text:span></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table5.A2" office:value-type="string"><text:p text:style-name="Standard"><text:span text:style-name="Variable">x</text:span><text:span text:style-name="Source_20_Text"> – </text:span><text:span text:style-name="Variable">y</text:span></text:p></table:table-cell><table:table-cell table:style-name="Table5.B2" office:value-type="string"><text:p text:style-name="Standard">difference of <text:span text:style-name="Variable">x</text:span> and <text:span text:style-name="Variable">y</text:span></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table5.A2" office:value-type="string"><text:p text:style-name="Standard"><text:span text:style-name="Variable">x</text:span><text:span text:style-name="Source_20_Text"> * </text:span><text:span text:style-name="Variable">y</text:span></text:p></table:table-cell><table:table-cell table:style-name="Table5.B2" office:value-type="string"><text:p text:style-name="Standard">product of <text:span text:style-name="Variable">x</text:span> and <text:span text:style-name="Variable">y</text:span></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table5.A2" office:value-type="string"><text:p text:style-name="Standard"><text:span text:style-name="Variable">x</text:span><text:span text:style-name="Source_20_Text"> / </text:span><text:span text:style-name="Variable">y</text:span></text:p></table:table-cell><table:table-cell table:style-name="Table5.B2" office:value-type="string"><text:p text:style-name="Standard">quotient of <text:span text:style-name="Variable">x</text:span> and <text:span text:style-name="Variable">y</text:span></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table5.A2" office:value-type="string"><text:p text:style-name="Standard"><text:span text:style-name="Variable">x</text:span><text:span text:style-name="Source_20_Text"> // </text:span><text:span text:style-name="Variable">y</text:span></text:p></table:table-cell><table:table-cell table:style-name="Table5.B2" office:value-type="string"><text:p text:style-name="Standard">(floored) quotient of <text:span text:style-name="Variable">x</text:span> and <text:span text:style-name="Variable">y</text:span></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table5.A2" office:value-type="string"><text:p text:style-name="Standard"><text:span text:style-name="Variable">x</text:span><text:span text:style-name="Source_20_Text"> % </text:span><text:span text:style-name="Variable">y</text:span></text:p></table:table-cell><table:table-cell table:style-name="Table5.B2" office:value-type="string"><text:p text:style-name="Standard">remainder of <text:span text:style-name="Variable">x</text:span><text:span text:style-name="Source_20_Text"> / </text:span><text:span text:style-name="Variable">y</text:span></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table5.A2" office:value-type="string"><text:p text:style-name="Standard"><text:span text:style-name="Source_20_Text">-</text:span><text:span text:style-name="Variable">x</text:span></text:p></table:table-cell><table:table-cell table:style-name="Table5.B2" office:value-type="string"><text:p text:style-name="Standard"><text:span text:style-name="Variable">x</text:span> negated</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table5.A2" office:value-type="string"><text:p text:style-name="Standard"><text:span text:style-name="Source_20_Text">+</text:span><text:span text:style-name="Variable">x</text:span></text:p></table:table-cell><table:table-cell table:style-name="Table5.B2" office:value-type="string"><text:p text:style-name="Standard"><text:span text:style-name="Variable">x</text:span> unchanged</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table5.A2" office:value-type="string"><text:p text:style-name="Standard"><text:span text:style-name="Source_20_Text">abs(</text:span><text:span text:style-name="Variable">x</text:span><text:span text:style-name="Source_20_Text">)</text:span></text:p></table:table-cell><table:table-cell table:style-name="Table5.B2" office:value-type="string"><text:p text:style-name="Standard">absolute value or magnitude of <text:span text:style-name="Variable">x</text:span></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table5.A2" office:value-type="string"><text:p text:style-name="Standard"><text:span text:style-name="Source_20_Text">int(</text:span><text:span text:style-name="Variable">x</text:span><text:span text:style-name="Source_20_Text">)</text:span></text:p><text:p text:style-name="Standard"><text:span text:style-name="Source_20_Text">int(</text:span><text:span text:style-name="Variable">x</text:span><text:span text:style-name="Source_20_Text">,</text:span><text:span text:style-name="Variable">base</text:span><text:span text:style-name="Source_20_Text">)</text:span></text:p></table:table-cell><table:table-cell table:style-name="Table5.B2" office:value-type="string"><text:p text:style-name="Standard"><text:span text:style-name="Variable">x</text:span> (decimal) converted to integer; optional <text:span text:style-name="T8">base</text:span> converts strings from hex, binary, octal, or any other base</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table5.A2" office:value-type="string"><text:p text:style-name="Standard"><text:span text:style-name="Source_20_Text">float(</text:span><text:span text:style-name="Variable">x</text:span><text:span text:style-name="Source_20_Text">)</text:span></text:p></table:table-cell><table:table-cell table:style-name="Table5.B2" office:value-type="string"><text:p text:style-name="Standard"><text:span text:style-name="Variable">x</text:span> converted to floating point</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table5.A2" office:value-type="string"><text:p text:style-name="Standard"><text:span text:style-name="Source_20_Text">complex(</text:span><text:span text:style-name="Variable">re</text:span><text:span text:style-name="Source_20_Text">,</text:span><text:span text:style-name="Variable">im</text:span><text:span text:style-name="Source_20_Text">)</text:span></text:p></table:table-cell><table:table-cell table:style-name="Table5.B2" office:value-type="string"><text:p text:style-name="Standard">a complex number with real part <text:span text:style-name="Variable">re</text:span>, imaginary part <text:span text:style-name="Variable">im</text:span>. <text:span text:style-name="Variable">im</text:span> defaults to zero.</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table5.A2" office:value-type="string"><text:p text:style-name="Standard"><text:span text:style-name="Variable">c</text:span><text:span text:style-name="Source_20_Text">.conjugate()</text:span></text:p></table:table-cell><table:table-cell table:style-name="Table5.B2" office:value-type="string"><text:p text:style-name="Standard">conjugate of the complex number <text:span text:style-name="Variable">c</text:span></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table5.A2" office:value-type="string"><text:p text:style-name="Standard"><text:span text:style-name="Source_20_Text">divmod(</text:span><text:span text:style-name="Variable">x</text:span><text:span text:style-name="Source_20_Text">, </text:span><text:span text:style-name="Variable">y</text:span><text:span text:style-name="Source_20_Text">)</text:span></text:p></table:table-cell><table:table-cell table:style-name="Table5.B2" office:value-type="string"><text:p text:style-name="Standard">the pair <text:span text:style-name="Source_20_Text">(</text:span><text:span text:style-name="Variable">x</text:span><text:span text:style-name="Source_20_Text"> // </text:span><text:span text:style-name="Variable">y</text:span><text:span text:style-name="Source_20_Text">, </text:span><text:span text:style-name="Variable">x</text:span><text:span text:style-name="Source_20_Text"> % </text:span><text:span text:style-name="Variable">y</text:span><text:span text:style-name="Source_20_Text">)</text:span></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table5.A2" office:value-type="string"><text:p text:style-name="Standard"><text:span text:style-name="Source_20_Text">pow(</text:span><text:span text:style-name="Variable">x</text:span><text:span text:style-name="Source_20_Text">, </text:span><text:span text:style-name="Variable">y</text:span><text:span text:style-name="Source_20_Text">) </text:span></text:p><text:p text:style-name="Standard"><text:span text:style-name="Source_20_Text">x ** y</text:span></text:p></table:table-cell><table:table-cell table:style-name="Table5.B2" office:value-type="string"><text:p text:style-name="Standard"><text:span text:style-name="Variable">x</text:span> to the power <text:span text:style-name="Variable">y</text:span></text:p></table:table-cell></table:table-row></table:table><text:list xml:id="list84848818892070" text:continue-list="list84850131016675" text:style-name="WW8Num1"><text:list-header><text:p text:style-name="P42">Converting among types</text:p></text:list-header></text:list><text:list xml:id="list84849596360269" text:continue-list="list84850093226887" text:style-name="MT-Major_20_point_20_bullets"><text:list-item text:start-value="1"><text:p text:style-name="MT-Major_20_Point_20_Text">No automatic conversion</text:p></text:list-item><text:list-item><text:p text:style-name="MT-Major_20_Point_20_Text">Built in functions</text:p></text:list-item></text:list><text:p text:style-name="P32"><text:tab/>int() <text:tab/><text:span text:style-name="T7">convert string or number to integer</text:span></text:p><text:p text:style-name="P32"><text:tab/>float()<text:tab/><text:span text:style-name="T7">convert string or number to float</text:span></text:p><text:p text:style-name="P32"><text:tab/>str()<text:tab/><text:span text:style-name="T7">convert anything to string</text:span></text:p><text:p text:style-name="P32"><text:tab/>bool()<text:tab/><text:span text:style-name="T7">convert anything to bool</text:span></text:p><text:p text:style-name="P33"/><text:list xml:id="list84849570711417" text:continue-list="list84848818892070" text:style-name="WW8Num1"><text:list-header><text:p text:style-name="P30">Python is dynamically typed; if you assign a number to a variable, it will raise an error if you use it with a string operator or function; likewise, if you assign a string, you can&apos;t use it with numeric operators.</text:p><text:p text:style-name="P30">Python has built-in functions to do these conversions. Use int(<text:span text:style-name="T8">s</text:span>) to convert string <text:span text:style-name="T8">s</text:span> to an integer. Use str(<text:span text:style-name="T8">n</text:span>) to convert anything to a string, and so forth.</text:p></text:list-header></text:list><text:p text:style-name="Standard">There are functions to convert to all builtin types; the above <text:span text:style-name="T20">four </text:span>are the most often used.</text:p><text:list xml:id="list84850523818398" text:continue-numbering="true" text:style-name="WW8Num1"><text:list-header><text:p text:style-name="P30"/></text:list-header></text:list><text:p text:style-name="MT-Sidebar">If the string passed to <text:span text:style-name="T5">int()</text:span> or <text:span text:style-name="T5">float()</text:span> contains characters other that digits or minus sign, a runtime error is raised. Leading or trailing whitespace, however, are ignored. Thus &quot; <text:s/>123 <text:s/>&quot; is OK, but &quot;123ABC&quot; is not.</text:p><text:p text:style-name="Standard"/><text:p text:style-name="Standard"/><text:list xml:id="list84848644913829" text:continue-numbering="true" text:style-name="WW8Num1"><text:list-header><text:p text:style-name="P42">Writing to the screen</text:p></text:list-header></text:list><text:list xml:id="list84850529053822" text:continue-list="list84849596360269" text:style-name="MT-Major_20_point_20_bullets"><text:list-item text:start-value="1"><text:p text:style-name="MT-Major_20_Point_20_Text">Use print() function</text:p></text:list-item><text:list-item><text:p text:style-name="MT-Major_20_Point_20_Text">Adds spaces between arguments (by default)</text:p></text:list-item><text:list-item><text:p text:style-name="MT-Major_20_Point_20_Text">Adds newline (by default)</text:p></text:list-item><text:list-item><text:p text:style-name="MT-Major_20_Point_20_Text">Use <text:span text:style-name="T10">sep</text:span> parameter for alternate separator</text:p></text:list-item><text:list-item><text:p text:style-name="MT-Major_20_Point_20_Text">Use <text:span text:style-name="T10">end</text:span> parameter for alternate end of string</text:p></text:list-item></text:list><text:list xml:id="list84849860283063" text:continue-list="list84848644913829" text:style-name="WW8Num1"><text:list-header><text:p text:style-name="P30">To output text to the screen, use the <text:span text:style-name="T5">print</text:span> function. It takes a list of one or more arguments, and writes them to the screen<text:note text:id="ftn1" text:note-class="footnote"><text:note-citation>1</text:note-citation><text:note-body><text:p text:style-name="Footnote">Actually, <text:span text:style-name="T5">print</text:span> outputs to STDOUT, which is the screen unless the script has been redirected.</text:p></text:note-body></text:note>. By default, print() adds a space between the arguments and<text:span text:style-name="T5"> </text:span>adds a newline at the end.</text:p></text:list-header></text:list><text:p text:style-name="Standard">Two special named arguments can modify the default behavior. The <text:span text:style-name="T8">sep</text:span><text:span text:style-name="T13"> argument specifies the output separator, and the </text:span><text:span text:style-name="T8">end</text:span><text:span text:style-name="T13"> specifies what is written after all the arguments.</text:span></text:p><text:p text:style-name="P6"/><text:p text:style-name="EX-Heading"/><text:p text:style-name="P9">Examples</text:p><text:p text:style-name="EX-Filename">print_ex<text:span text:style-name="T21">amples</text:span>.py</text:p><text:p text:style-name="EX-Code">print(&quot;Hello, world&quot;)</text:p><text:p text:style-name="EX-Code">print(&quot;#------------------------&quot;)</text:p><text:p text:style-name="EX-Code"/><text:p text:style-name="EX-Code">print(&quot;Hello,&quot;, end=&apos; &apos;)</text:p><text:p text:style-name="EX-Code">print(&quot;world&quot;)</text:p><text:p text:style-name="EX-Code">print(&quot;#------------------------&quot;)</text:p><text:p text:style-name="EX-Code"/><text:p text:style-name="EX-Code">print(&quot;Hello,&quot;, end=&apos; &apos;)</text:p><text:p text:style-name="EX-Code">print(&quot;world&quot;, end =&apos;!&apos;)</text:p><text:p text:style-name="EX-Code">print(&quot;#------------------------&quot;)</text:p><text:p text:style-name="EX-Code"/><text:p text:style-name="EX-Code">x = &quot;Hello&quot;</text:p><text:p text:style-name="EX-Code">y = &quot;world&quot;</text:p><text:p text:style-name="EX-Code"/><text:p text:style-name="EX-Code">print(x,y)</text:p><text:p text:style-name="EX-Code">print(&quot;#------------------------&quot;)</text:p><text:p text:style-name="EX-Code"/><text:p text:style-name="EX-Code">print(x,y,sep=&apos;, &apos;)</text:p><text:p text:style-name="EX-Code">print(&quot;#------------------------&quot;)</text:p><text:p text:style-name="EX-Code"/><text:p text:style-name="EX-Code">print(x,y,sep=&apos;&apos;)</text:p><text:p text:style-name="EX-Code">print(&quot;#------------------------&quot;)</text:p><text:p text:style-name="EX-Code"/><text:p text:style-name="P13">print_ex<text:span text:style-name="T21">amples</text:span>.py</text:p><text:p text:style-name="EX-Output">Hello, world</text:p><text:p text:style-name="EX-Output">#------------------------</text:p><text:p text:style-name="EX-Output">Hello, world</text:p><text:p text:style-name="EX-Output">#------------------------</text:p><text:p text:style-name="EX-Output">Hello, world!<text:line-break/>#------------------------</text:p><text:p text:style-name="EX-Output">Hello world</text:p><text:p text:style-name="EX-Output">#------------------------</text:p><text:p text:style-name="EX-Output">Hello, world</text:p><text:p text:style-name="EX-Output">#------------------------</text:p><text:p text:style-name="EX-Output">Helloworld</text:p><text:p text:style-name="EX-Output">#------------------------</text:p><text:p text:style-name="EX-Output"/><text:p text:style-name="Standard"/><text:list xml:id="list84850055574364" text:continue-numbering="true" text:style-name="WW8Num1"><text:list-header><text:p text:style-name="P42">String Formatting</text:p></text:list-header></text:list><text:list xml:id="list84849732304966" text:continue-list="list84850529053822" text:style-name="MT-Major_20_point_20_bullets"><text:list-item text:start-value="1"><text:p text:style-name="MT-Major_20_Point_20_Text">Use the .format() method</text:p></text:list-item><text:list-item><text:p text:style-name="MT-Major_20_Point_20_Text">Syntax: <text:s text:c="2"/>&quot;template&quot;.format(VALUES)</text:p></text:list-item><text:list-item><text:p text:style-name="MT-Major_20_Point_20_Text">Placeholders: <text:span text:style-name="T17">{Num:FlagsWidthType}</text:span></text:p></text:list-item></text:list><text:list xml:id="list84850102984823" text:continue-list="list84850055574364" text:style-name="WW8Num1"><text:list-header><text:p text:style-name="P30">Strings have a <text:span text:style-name="T5">format()</text:span> method for customer formatting of text. Parameters to the <text:span text:style-name="T5">format()</text:span> method are numbered starting with 0, and are formatted by placeholders in the string.</text:p><text:p text:style-name="P30">Builtin types to not need to have the type specified, but you may specify the width of the formatted value, <text:s/>the number of decimal points, or other type-specific details.</text:p><text:p text:style-name="P30">For instance, {0} will use default formatting for the first parameter. {2:04d} will format the third parameter as an integer, padded with zeros to four characters wide. </text:p><text:p text:style-name="P30">There are many more ways of using <text:span text:style-name="T5">format()</text:span>; this discussion describes some of the basics.</text:p></text:list-header></text:list><text:p text:style-name="Standard">A placeholder looks like this: {0}, where 0 <text:s/>is the parameter number. To add formatting flags, follow the parameter number with a colon, then the type and other flags. You can also used named parameters, and specify the name rather than the parameter index.</text:p><text:p text:style-name="Standard">To include literal braces in the string, double them: {{ }}.</text:p><text:p text:style-name="Standard">For more information, check out the PyDoc topic FORMATTING.</text:p><text:p text:style-name="Standard"/><text:p text:style-name="Standard"/><text:p text:style-name="Standard"/><text:p text:style-name="P9">Examples</text:p><text:p text:style-name="EX-Filename"><text:span text:style-name="T21">string_</text:span>format<text:span text:style-name="T21">ting</text:span>.py</text:p><text:p text:style-name="EX-Code">import sys</text:p><text:p text:style-name="EX-Code"/><text:p text:style-name="EX-Code">name = &quot;Tim&quot;</text:p><text:p text:style-name="EX-Code">count = 5</text:p><text:p text:style-name="EX-Code">avg = 3.456</text:p><text:p text:style-name="EX-Code">info = 2093</text:p><text:p text:style-name="EX-Code"/><text:p text:style-name="EX-Code">print(&quot;Name is &gt;{0:&lt;10s}&lt;&quot;.format(name))</text:p><text:p text:style-name="EX-Code">print(&quot;Name is &gt;{0:&gt;10s}&lt;&quot;.format(name))</text:p><text:p text:style-name="EX-Code">print(&quot;count is {0:03d} avg is {1:6.2f}&quot;.format(count,avg))</text:p><text:p text:style-name="EX-Code"/><text:p text:style-name="EX-Code">print(&quot;info is {0} {0:d} {0:o} {0:x}&quot;.format(info))</text:p><text:p text:style-name="EX-Code">print(&quot;info is {0} {0:d} {0:#o} {0:#x}&quot;.format(info))</text:p><text:p text:style-name="EX-Code"/><text:p text:style-name="EX-Code">if (sys.version_info[0] &gt;= 3) and (sys.version_info[1] &gt;= 1):</text:p><text:p text:style-name="EX-Code"><text:s text:c="4"/>print(&quot;${0:,d}&quot;.format(38293892)) <text:s text:c="2"/></text:p><text:p text:style-name="EX-Code">else:</text:p><text:p text:style-name="EX-Code"><text:s text:c="4"/>print(&quot;NOTICE: version &gt;= 3.1 needed for comma format&quot;)</text:p><text:p text:style-name="EX-Code"/><text:p text:style-name="EX-Code">print(&quot;It is {temp} in {city}&quot;.format(city=&apos;Orlando&apos;,temp=85))</text:p><text:p text:style-name="EX-Code"/><text:p text:style-name="P13"><text:span text:style-name="T21">string_</text:span>format<text:span text:style-name="T21">ting</text:span>.py</text:p><text:p text:style-name="EX-Output">Name is &gt;Tim <text:s text:c="6"/>&lt; </text:p><text:p text:style-name="EX-Output">Name is &gt; <text:s text:c="6"/>Tim&lt; </text:p><text:p text:style-name="EX-Output">count is 005 avg is <text:s text:c="2"/>3.46 </text:p><text:p text:style-name="EX-Output">inf1o is 2093 2093 4055 82d </text:p><text:p text:style-name="EX-Output">info is 2093 2093 0o4055 0x82d </text:p><text:p text:style-name="EX-Output">$38,293,892 </text:p><text:p text:style-name="EX-Output">It is 85 in Orlando <text:tab/></text:p><text:p text:style-name="Standard"/><text:list xml:id="list84850354427822" text:continue-numbering="true" text:style-name="WW8Num1"><text:list-header><text:p text:style-name="P42">Command line parameters</text:p></text:list-header></text:list><text:list xml:id="list84850517203800" text:continue-list="list84849732304966" text:style-name="MT-Major_20_point_20_bullets"><text:list-item text:start-value="1"><text:p text:style-name="MT-Major_20_Point_20_Text">Use the <text:span text:style-name="T15">argv</text:span> list that is part of the <text:span text:style-name="T15">sys</text:span> module</text:p></text:list-item><text:list-item><text:p text:style-name="MT-Major_20_Point_20_Text"><text:span text:style-name="T15">sys</text:span> must be imported</text:p></text:list-item><text:list-item><text:p text:style-name="MT-Major_20_Point_20_Text">Element 0 is the script name itself</text:p></text:list-item></text:list><text:list xml:id="list84849950017731" text:continue-list="list84850354427822" text:style-name="WW8Num1"><text:list-header><text:p text:style-name="P30">To get the command line parameters, use the list <text:span text:style-name="T5">sys.argv</text:span>. This requires importing the <text:span text:style-name="T5">sys</text:span> module. To access elements of this list, use square brackets and the element number. The first element (index 0) is the name of the script, so <text:span text:style-name="T5">sys.argv[1]</text:span> is the first argument to your script.</text:p></text:list-header></text:list><text:p text:style-name="EX-Heading">Example</text:p><text:p text:style-name="P3"><text:span text:style-name="T21">cmd_line_</text:span>arg<text:span text:style-name="T21">s</text:span>.py</text:p><text:p text:style-name="P29">import sys</text:p><text:p text:style-name="P29"/><text:p text:style-name="P29">print(sys.argv)</text:p><text:p text:style-name="P29"/><text:p text:style-name="P29">name = sys.argv[1]</text:p><text:p text:style-name="P29">print(&quot;name is&quot;,name)</text:p><text:p text:style-name="EX-Code"/><text:p text:style-name="P13"><text:span text:style-name="T21">cmd_line_args</text:span>.py Gawain</text:p><text:p text:style-name="P14">[&apos;/Users/jstrick/Documents/curr/courses/python/py3master/1.0/StudentFiles/unix/py3master/EXAMPLES/cmd_line_args.py&apos;, &apos;Gawain&apos;]</text:p><text:p text:style-name="P14">name is Gawain</text:p><text:p text:style-name="Standard"/><text:p text:style-name="MT-Sidebar">If you use an index for a non-existent parameter, an error will be raised and your script will stop. In later chapters you will learn how to check the size of a list, as well as how to trap the error.</text:p><text:p text:style-name="Standard"/><text:p text:style-name="Standard"/><text:p text:style-name="Standard"/><text:p text:style-name="Standard"><draw:frame text:anchor-type="paragraph" draw:z-index="6" draw:style-name="gr2" draw:text-style-name="P46" svg:width="1.2378in" svg:height="0.2953in" svg:x="3.8154in" svg:y="0.1146in"><draw:text-box><text:p text:style-name="P45"><text:span text:style-name="T16">sys.argv[3]</text:span></text:p></draw:text-box></draw:frame><draw:frame text:anchor-type="paragraph" draw:z-index="3" draw:style-name="gr2" draw:text-style-name="P47" svg:width="1.2677in" svg:height="0.2953in" svg:x="1.7709in" svg:y="0.1146in"><draw:text-box><text:p text:style-name="P45"><text:span text:style-name="T16">sys.argv[1]</text:span></text:p></draw:text-box></draw:frame></text:p><text:p text:style-name="Standard"><draw:line text:anchor-type="paragraph" draw:z-index="4" draw:style-name="gr1" draw:text-style-name="P45" svg:x1="1.4756in" svg:y1="0.7854in" svg:x2="2.3311in" svg:y2="0.1354in"><text:p/></draw:line><draw:line text:anchor-type="paragraph" draw:z-index="7" draw:style-name="gr1" draw:text-style-name="P45" svg:x1="3.3335in" svg:y1="0.7953in" svg:x2="4.3063in" svg:y2="0.1354in"><text:p/></draw:line></text:p><text:p text:style-name="Standard"/><text:p text:style-name="Standard"/><text:p text:style-name="P7"><draw:line text:anchor-type="paragraph" draw:z-index="2" draw:style-name="gr1" draw:text-style-name="P45" svg:x1="2.5374in" svg:y1="0.3425in" svg:x2="2.9209in" svg:y2="1.1189in"><text:p/></draw:line>foo.py apple banana mango</text:p><text:p text:style-name="P7"><draw:line text:anchor-type="paragraph" draw:z-index="0" draw:style-name="gr1" draw:text-style-name="P45" svg:x1="0.4543in" svg:y1="0.002in" svg:x2="0.8378in" svg:y2="0.7783in"><text:p/></draw:line><draw:frame text:anchor-type="paragraph" draw:z-index="1" draw:style-name="gr2" draw:text-style-name="P46" svg:width="1.278in" svg:height="0.2953in" svg:x="0.2965in" svg:y="0.7783in"><draw:text-box><text:p text:style-name="P45"><text:span text:style-name="T16">sys.argv[0]</text:span></text:p></draw:text-box></draw:frame><draw:frame text:anchor-type="paragraph" draw:z-index="5" draw:style-name="gr2" draw:text-style-name="P46" svg:width="1.385in" svg:height="0.2953in" svg:x="2.302in" svg:y="0.7681in"><draw:text-box><text:p text:style-name="P45"><text:span text:style-name="T16">sys.argv[2]</text:span></text:p></draw:text-box></draw:frame></text:p><text:list xml:id="list84850075140168" text:continue-numbering="true" text:style-name="WW8Num1"><text:list-header><text:p text:style-name="P42">Reading from the keyboard</text:p></text:list-header></text:list><text:list xml:id="list84848905753997" text:continue-list="list84850517203800" text:style-name="MT-Major_20_point_20_bullets"><text:list-item text:start-value="1"><text:p text:style-name="MT-Major_20_Point_20_Text">Use <text:span text:style-name="MT-Major_20_Point_20_Code">input()</text:span></text:p></text:list-item><text:list-item><text:p text:style-name="MT-Major_20_Point_20_Text">Provides a prompt string</text:p></text:list-item><text:list-item><text:p text:style-name="P34">Use int() or float() to convert input to numeric values</text:p></text:list-item></text:list><text:p text:style-name="Standard">To read a line from the keyboard, use <text:span text:style-name="T5">input()</text:span>. The parameter is a prompt string, and it returns the text that was entered. You can use <text:span text:style-name="T5">int()</text:span> or <text:span text:style-name="T5">float()</text:span> to convert the input to an integer or a floating-point number.</text:p><text:p text:style-name="EX-Heading">Examples</text:p><text:p text:style-name="EX-Filename"><text:span text:style-name="T21">keyboard_</text:span>input.py</text:p><text:p text:style-name="EX-Code">name = input(&quot;What is your name: &quot;)</text:p><text:p text:style-name="EX-Code">quest = input(&quot;What is your quest? &quot;)</text:p><text:p text:style-name="EX-Code">print(name,&quot;seeks&quot;,quest)</text:p><text:p text:style-name="EX-Code">num = int(input(&quot;Enter number: &quot;))</text:p><text:p text:style-name="EX-Code">print(&quot;2 times&quot;,num,&quot;is &quot;,2 * num)</text:p><text:p text:style-name="EX-Code"/><text:p text:style-name="P13"><text:span text:style-name="T21">keyboard_</text:span>input.py</text:p><text:p text:style-name="EX-Output">What is your name: <text:span text:style-name="T5">Sir Lancelot</text:span></text:p><text:p text:style-name="EX-Output">What is your quest? <text:span text:style-name="T5">the Grail</text:span></text:p><text:p text:style-name="EX-Output">Sir Lancelot seeks the Grail</text:p><text:p text:style-name="EX-Output">Enter number: <text:span text:style-name="T5">5</text:span></text:p><text:p text:style-name="EX-Output">2 times 5 is <text:s/>10</text:p><text:p text:style-name="Standard"/><text:p text:style-name="Standard"/><text:p text:style-name="MT-Sidebar">If you use int() or float() to convert a string, a fatal error will be raised if the string contains any non-numeric characters or any embedded spaces. Leading and trailing spaces will be ignored.</text:p><text:p text:style-name="EX-Code"/><text:p text:style-name="EX-Heading"/><text:p text:style-name="P10">Chapter <text:span text:style-name="T1">2</text:span> Exercises</text:p><text:p text:style-name="P27"/><text:p text:style-name="LAB-Ex_20_number">Exercise <text:span text:style-name="T1">2</text:span>-1 <text:span text:style-name="T21">(c2f.py)</text:span></text:p><text:p text:style-name="LAB-Text">Write a script to prompt the user for a Celsius temperature, the print out the Fahrenheit equivalent. </text:p><text:p text:style-name="LAB-Text">What the user types on the command line:</text:p><text:p text:style-name="LAB-Code">c2f.py</text:p><text:p text:style-name="LAB-Text">The program prompts the user, and the user enters the temperature to be converted.</text:p><text:p text:style-name="LAB-Text">The formula is F = ((9 * C) / 5 ) + 32. Be sure to convert the user-entered value into a float.</text:p><text:p text:style-name="LAB-Text">Test your script with the following values: <text:span text:style-name="T4">100</text:span>, <text:span text:style-name="T4">0</text:span>, <text:span text:style-name="T4">37</text:span>, <text:span text:style-name="T4">-40</text:span></text:p><text:p text:style-name="LAB-Ex_20_number">Exercise <text:span text:style-name="T1">2</text:span>-2 <text:span text:style-name="T21">(c2f_batch.py)</text:span></text:p><text:p text:style-name="LAB-Text">Write a Celsius to Fahrenheit converter. <text:s/>Your script should take the Celsius temperature from the command line and output the Fahrenheit value. What the user types on the command line is as follows:</text:p><text:p text:style-name="LAB-Code">c2fbatch.py 100</text:p><text:p text:style-name="LAB-Text">Test with the values from <text:span text:style-name="T6">c2f.py</text:span><text:span text:style-name="T24">.</text:span></text:p><text:p text:style-name="MT-Sidebar">These two programs should be identical, except for the input source.</text:p><text:p text:style-name="LAB-Ex_20_number">Exercise <text:span text:style-name="T1">2</text:span>-3 <text:span text:style-name="T21">(string_fun.py)</text:span></text:p><text:p text:style-name="LAB-Text">Write a script to prompt the user for a full name. Once the name is read in, do the following:</text:p><text:list xml:id="list1859441800404843623" text:style-name="L5"><text:list-item><text:p text:style-name="P43">Print out the name as-is</text:p></text:list-item><text:list-item><text:p text:style-name="P43">Print the name in upper case</text:p></text:list-item><text:list-item><text:p text:style-name="P43">Print the name in title case</text:p></text:list-item><text:list-item><text:p text:style-name="P43">Print the number of occurrences of &apos;j&apos; <text:span text:style-name="T23">(case-insensitive)</text:span></text:p></text:list-item><text:list-item><text:p text:style-name="P43">Print the length of the name</text:p></text:list-item><text:list-item><text:p text:style-name="P44">Print the position (offset) of &quot;jacob&quot; in the string<text:span text:style-name="T23">( case-insensitive)</text:span></text:p></text:list-item></text:list><text:p text:style-name="LAB-Text">Run the program, and enter <text:span text:style-name="T5">john jacob jingleheimer smith</text:span></text:p><text:p text:style-name="P26"/></office:text></office:body></office:document-content>